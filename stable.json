{
    "openapi": "3.0.2",
    "info": {
      "title": "Klaviyo API",
      "version": "2023-02-22",
      "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
      "contact": {
        "name": "Klaviyo Developer Experience Team",
        "email": "developers@klaviyo.com",
        "url": "https://developers.klaviyo.com"
      },
      "termsOfService": "https://www.klaviyo.com/legal/api-terms",
      "license": {
        "name": "License",
        "url": "https://www.klaviyo.com/legal"
      }
    },
    "servers": [
      {
        "url": "https://a.klaviyo.com",
        "description": "Production"
      }
    ],
    "paths": {
      "/api/campaigns/": {
        "get": {
          "operationId": "get_campaigns",
          "summary": "Get Campaigns",
          "description": "Returns some or all campaigns based on [optional] filters<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
          "parameters": [
            {
              "name": "fields[campaign]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "channel",
                    "audiences",
                    "audiences.included",
                    "audiences.excluded",
                    "send_options",
                    "send_options.use_smart_sending",
                    "message",
                    "tracking_options",
                    "tracking_options.is_tracking_opens",
                    "tracking_options.is_tracking_clicks",
                    "tracking_options.is_add_utm",
                    "tracking_options.utm_params",
                    "send_strategy",
                    "send_strategy.method",
                    "send_strategy.options_static",
                    "send_strategy.options_static.datetime",
                    "send_strategy.options_static.is_local",
                    "send_strategy.options_static.send_past_recipients_immediately",
                    "send_strategy.options_throttled",
                    "send_strategy.options_throttled.datetime",
                    "send_strategy.options_throttled.throttle_percentage",
                    "send_strategy.options_sto",
                    "send_strategy.options_sto.date",
                    "created_at",
                    "scheduled_at",
                    "updated_at",
                    "send_time"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`<br>`status`: `any`, `equals`<br>`archived`: `equals`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`scheduled_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tags"
                  ]
                }
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created_at",
                  "-created_at",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "scheduled_at",
                  "-scheduled_at",
                  "updated_at",
                  "-updated_at"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read"
          ],
          "x-klaviyo-subtag": "Campaigns"
        },
        "post": {
          "operationId": "create_campaign",
          "summary": "Create Campaign",
          "description": "Creates a campaign given a set of parameters, then returns it.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Creates a campaign from parameters",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCampaignResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Campaigns"
        }
      },
      "/api/campaigns/{id}/": {
        "get": {
          "operationId": "get_campaign",
          "summary": "Get Campaign",
          "description": "Returns a specific campaign based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The campaign ID to be retrieved",
              "required": true,
              "schema": {
                "description": "The campaign ID to be retrieved",
                "type": "string"
              }
            },
            {
              "name": "fields[campaign]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "channel",
                    "audiences",
                    "audiences.included",
                    "audiences.excluded",
                    "send_options",
                    "send_options.use_smart_sending",
                    "message",
                    "tracking_options",
                    "tracking_options.is_tracking_opens",
                    "tracking_options.is_tracking_clicks",
                    "tracking_options.is_add_utm",
                    "tracking_options.utm_params",
                    "send_strategy",
                    "send_strategy.method",
                    "send_strategy.options_static",
                    "send_strategy.options_static.datetime",
                    "send_strategy.options_static.is_local",
                    "send_strategy.options_static.send_past_recipients_immediately",
                    "send_strategy.options_throttled",
                    "send_strategy.options_throttled.datetime",
                    "send_strategy.options_throttled.throttle_percentage",
                    "send_strategy.options_sto",
                    "send_strategy.options_sto.date",
                    "created_at",
                    "scheduled_at",
                    "updated_at",
                    "send_time"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tags"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read"
          ],
          "x-klaviyo-subtag": "Campaigns"
        },
        "patch": {
          "operationId": "update_campaign",
          "summary": "Update Campaign",
          "description": "Update a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The campaign ID to be retrieved",
              "required": true,
              "schema": {
                "description": "The campaign ID to be retrieved",
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Update a campaign and return it",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignPartialUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCampaignResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Campaigns"
        },
        "delete": {
          "operationId": "delete_campaign",
          "summary": "Delete Campaign",
          "description": "Delete a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The campaign ID to be deleted",
              "required": true,
              "schema": {
                "description": "The campaign ID to be deleted",
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Campaigns"
        }
      },
      "/api/campaign-messages/{id}/": {
        "get": {
          "operationId": "get_campaign_message",
          "summary": "Get Campaign Message",
          "description": "Returns a specific message based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The message ID to be retrieved",
              "required": true,
              "schema": {
                "description": "The message ID to be retrieved",
                "type": "string"
              }
            },
            {
              "name": "fields[campaign-message]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "label",
                    "channel",
                    "content",
                    "content.subject",
                    "content.preview_text",
                    "content.from_email",
                    "content.from_label",
                    "content.template_id",
                    "content.template_name",
                    "send_times",
                    "created_at",
                    "updated_at",
                    "campaign_id"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignMessageResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read"
          ],
          "x-klaviyo-subtag": "Messages"
        },
        "patch": {
          "operationId": "update_campaign_message",
          "summary": "Update Campaign Message",
          "description": "Update a campaign message<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The message ID to be retrieved",
              "required": true,
              "schema": {
                "description": "The message ID to be retrieved",
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Update a message and return it",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignMessagePartialUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCampaignMessageResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Messages"
        }
      },
      "/api/campaigns/{campaign_id}/tags/": {
        "get": {
          "operationId": "get_campaign_tags",
          "summary": "Get Campaign Tags",
          "description": "Return all tags that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
          "parameters": [
            {
              "name": "campaign_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Campaigns"
        }
      },
      "/api/campaign-send-jobs/{id}/": {
        "get": {
          "operationId": "get_campaign_send_job",
          "summary": "Get Campaign Send Job",
          "description": "Get a campaign send job<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the campaign to send",
              "required": true,
              "schema": {
                "description": "The ID of the campaign to send",
                "type": "string"
              }
            },
            {
              "name": "fields[campaign-send-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "status"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignSendJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read"
          ],
          "x-klaviyo-subtag": "Jobs"
        },
        "patch": {
          "operationId": "update_campaign_send_job",
          "summary": "Update Campaign Send Job",
          "description": "Permanently cancel the campaign, setting the status to CANCELED or revert the campaign, setting the status back to DRAFT<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the currently sending campaign to cancel or revert",
              "required": true,
              "schema": {
                "description": "The ID of the currently sending campaign to cancel or revert",
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Permanently cancel the campaign, setting the status to CANCELED or revert the campaign, setting the status back to DRAFT",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Jobs"
        }
      },
      "/api/campaign-recipient-estimation-jobs/{id}/": {
        "get": {
          "operationId": "get_campaign_recipient_estimation_job",
          "summary": "Get Campaign Recipient Estimation Job",
          "description": "Retrieve the status of a recipient estimation job triggered with the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the campaign to get recipient estimation status",
              "required": true,
              "schema": {
                "description": "The ID of the campaign to get recipient estimation status",
                "type": "string"
              }
            },
            {
              "name": "fields[campaign-recipient-estimation-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "status"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignRecipientEstimationJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read"
          ],
          "x-klaviyo-subtag": "Jobs"
        }
      },
      "/api/campaign-recipient-estimations/{id}/": {
        "get": {
          "operationId": "get_campaign_recipient_estimation",
          "summary": "Get Campaign Recipient Estimation",
          "description": "Get the estimated recipient count for a campaign with the provided campaign ID. You can refresh this count by using the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the campaign for which to get the estimated number of recipients",
              "required": true,
              "schema": {
                "description": "The ID of the campaign for which to get the estimated number of recipients",
                "type": "string"
              }
            },
            {
              "name": "fields[campaign-recipient-estimation]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "estimated_recipient_count"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignRecipientEstimationResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read"
          ],
          "x-klaviyo-subtag": "Campaigns"
        }
      },
      "/api/campaign-clone/": {
        "post": {
          "operationId": "create_campaign_clone",
          "summary": "Create Campaign Clone",
          "description": "Clones an existing campaign, returning a new campaign based on the original with a new ID and name.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Clones a campaign from an existing campaign",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignCloneQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCampaignResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Campaigns"
        }
      },
      "/api/campaign-message-assign-template/": {
        "post": {
          "operationId": "create_campaign_message_assign_template",
          "summary": "Assign Campaign Message Template",
          "description": "Creates a non-reusable version of the template and assigns it to the message.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Takes a reusable template, clones it, and assigns the non-reusable clone to the message.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignMessageAssignTemplateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCampaignMessageResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Messages"
        }
      },
      "/api/campaign-send-jobs/": {
        "post": {
          "operationId": "create_campaign_send_job",
          "summary": "Create Campaign Send Job",
          "description": "Trigger a campaign to send asynchronously<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Trigger the campaign to send asynchronously",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignSendJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCampaignSendJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Jobs"
        }
      },
      "/api/campaign-recipient-estimation-jobs/": {
        "post": {
          "operationId": "create_campaign_recipient_estimation_job",
          "summary": "Create Campaign Recipient Estimation Job",
          "description": "Trigger an asynchronous job to update the estimated number of recipients for the given campaign ID. Use the `Get Campaign Recipient Estimation Job` endpoint to retrieve the status of this estimation job. Use the `Get Campaign Recipient Estimation` endpoint to retrieve the estimated recipient count for a given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Trigger an asynchronous job to update the estimated number of recipients for the given campaign ID. Use the `Get Campaign Recipient Estimation Job` endpoint to retrieve the status of this estimation job. Use the `Get Campaign Recipient Estimation` endpoint to retrieve the estimated recipient count for a given campaign.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCampaignRecipientEstimationJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write"
          ],
          "x-klaviyo-subtag": "Jobs"
        }
      },
      "/api/campaigns/{id}/relationships/tags/": {
        "get": {
          "operationId": "get_campaign_relationships_tags",
          "summary": "Get Campaign Relationships Tags",
          "description": "Returns the IDs of all tags associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCampaignTagRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Campaigns"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/catalog-items/": {
        "get": {
          "operationId": "get_catalog_items",
          "summary": "Get Catalog Items",
          "description": "Get all catalog items in an account.\nCatalog items can be sorted by the following fields, in ascending and descending order: `created`\nInclude parameters can be provided to get the following related resource data: `variants`\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-item]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        },
        "post": {
          "operationId": "create_catalog_item",
          "summary": "Create Catalog Item",
          "description": "Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-items/{id}/": {
        "get": {
          "operationId": "get_catalog_item",
          "summary": "Get Catalog Item",
          "description": "Get a specific catalog item with the given item ID.\nInclude parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              }
            },
            {
              "name": "fields[catalog-item]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        },
        "patch": {
          "operationId": "update_catalog_item",
          "summary": "Update Catalog Item",
          "description": "Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCatalogItemResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Items"
        },
        "delete": {
          "operationId": "delete_catalog_item",
          "summary": "Delete Catalog Item",
          "description": "Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-categories/{category_id}/items/": {
        "get": {
          "operationId": "get_catalog_category_items",
          "summary": "Get Catalog Category Items",
          "description": "Get all items in a category with the given category ID.\nItems can be sorted by the following fields, in ascending and descending order: `created`\nInclude parameters can be provided to get the following related resource data: `variants`\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "category_id",
              "in": "path",
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              }
            },
            {
              "name": "fields[catalog-item]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-variants/": {
        "get": {
          "operationId": "get_catalog_variants",
          "summary": "Get Catalog Variants",
          "description": "Get all variants in an account.\nVariants can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        },
        "post": {
          "operationId": "create_catalog_variant",
          "summary": "Create Catalog Variant",
          "description": "Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-variants/{id}/": {
        "get": {
          "operationId": "get_catalog_variant",
          "summary": "Get Catalog Variant",
          "description": "Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              }
            },
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        },
        "patch": {
          "operationId": "update_catalog_variant",
          "summary": "Update Catalog Variant",
          "description": "Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCatalogVariantResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Variants"
        },
        "delete": {
          "operationId": "delete_catalog_variant",
          "summary": "Delete Catalog Variant",
          "description": "Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-items/{item_id}/variants/": {
        "get": {
          "operationId": "get_catalog_item_variants",
          "summary": "Get Catalog Item Variants",
          "description": "Get all variants related to the given item ID.\nVariants can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "item_id",
              "in": "path",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              }
            },
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-categories/": {
        "get": {
          "operationId": "get_catalog_categories",
          "summary": "Get Catalog Categories",
          "description": "Get all catalog categories in an account.\nCatalog categories can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-category]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`name`: `contains`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        },
        "post": {
          "operationId": "create_catalog_category",
          "summary": "Create Catalog Category",
          "description": "Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-categories/{id}/": {
        "get": {
          "operationId": "get_catalog_category",
          "summary": "Get Catalog Category",
          "description": "Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              }
            },
            {
              "name": "fields[catalog-category]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        },
        "patch": {
          "operationId": "update_catalog_category",
          "summary": "Update Catalog Category",
          "description": "Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchCatalogCategoryResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Categories"
        },
        "delete": {
          "operationId": "delete_catalog_category",
          "summary": "Delete Catalog Category",
          "description": "Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-items/{item_id}/categories/": {
        "get": {
          "operationId": "get_catalog_item_categories",
          "summary": "Get Catalog Item Categories",
          "description": "Get all catalog categories that an item with the given item ID is in.\nCatalog categories can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "item_id",
              "in": "path",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "required": true,
              "schema": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              }
            },
            {
              "name": "fields[catalog-category]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`name`: `contains`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-item-bulk-create-jobs/": {
        "get": {
          "operationId": "get_create_items_jobs",
          "summary": "Get Create Items Jobs",
          "description": "Get all catalog item bulk create jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-item-bulk-create-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        },
        "post": {
          "operationId": "spawn_create_items_job",
          "summary": "Spawn Create Items Job",
          "description": "Create a catalog item bulk create job to create a batch of catalog items.\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCreateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemCreateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-item-bulk-create-jobs/{job_id}/": {
        "get": {
          "operationId": "get_create_items_job",
          "summary": "Get Create Items Job",
          "description": "Get a catalog item bulk create job with the given job ID.\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-item-bulk-create-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-item]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "items"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-item-bulk-update-jobs/": {
        "get": {
          "operationId": "get_update_items_jobs",
          "summary": "Get Update Items Jobs",
          "description": "Get all catalog item bulk update jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-item-bulk-update-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        },
        "post": {
          "operationId": "spawn_update_items_job",
          "summary": "Spawn Update Items Job",
          "description": "Create a catalog item bulk update job to update a batch of catalog items.\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemUpdateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-item-bulk-update-jobs/{job_id}/": {
        "get": {
          "operationId": "get_update_items_job",
          "summary": "Get Update Items Job",
          "description": "Get a catalog item bulk update job with the given job ID.\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-item-bulk-update-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-item]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "items"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-item-bulk-delete-jobs/": {
        "get": {
          "operationId": "get_delete_items_jobs",
          "summary": "Get Delete Items Jobs",
          "description": "Get all catalog item bulk delete jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-item-bulk-delete-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        },
        "post": {
          "operationId": "spawn_delete_items_job",
          "summary": "Spawn Delete Items Job",
          "description": "Create a catalog item bulk delete job to delete a batch of catalog items.\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogItemDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-item-bulk-delete-jobs/{job_id}/": {
        "get": {
          "operationId": "get_delete_items_job",
          "summary": "Get Delete Items Job",
          "description": "Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-item-bulk-delete-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Items"
        }
      },
      "/api/catalog-variant-bulk-create-jobs/": {
        "get": {
          "operationId": "get_create_variants_jobs",
          "summary": "Get Create Variants Jobs",
          "description": "Get all catalog variant bulk create jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-variant-bulk-create-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        },
        "post": {
          "operationId": "spawn_create_variants_job",
          "summary": "Spawn Create Variants Job",
          "description": "Create a catalog variant bulk create job to create a batch of catalog variants.\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantCreateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-variant-bulk-create-jobs/{job_id}/": {
        "get": {
          "operationId": "get_create_variants_job",
          "summary": "Get Create Variants Job",
          "description": "Get a catalog variant bulk create job with the given job ID.\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-variant-bulk-create-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-variant-bulk-update-jobs/": {
        "get": {
          "operationId": "get_update_variants_jobs",
          "summary": "Get Update Variants Jobs",
          "description": "Get all catalog variant bulk update jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-variant-bulk-update-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        },
        "post": {
          "operationId": "spawn_update_variants_job",
          "summary": "Spawn Update Variants Job",
          "description": "Create a catalog variant bulk update job to update a batch of catalog variants.\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantUpdateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-variant-bulk-update-jobs/{job_id}/": {
        "get": {
          "operationId": "get_update_variants_job",
          "summary": "Get Update Variants Job",
          "description": "Get a catalog variate bulk update job with the given job ID.\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-variant-bulk-update-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-variant]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "title",
                    "description",
                    "sku",
                    "inventory_policy",
                    "inventory_quantity",
                    "price",
                    "url",
                    "image_full_url",
                    "image_thumbnail_url",
                    "images",
                    "custom_metadata",
                    "published",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "variants"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-variant-bulk-delete-jobs/": {
        "get": {
          "operationId": "get_delete_variants_jobs",
          "summary": "Get Delete Variants Jobs",
          "description": "Get all catalog variant bulk delete jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-variant-bulk-delete-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        },
        "post": {
          "operationId": "spawn_delete_variants_job",
          "summary": "Spawn Delete Variants Job",
          "description": "Create a catalog variant bulk delete job to delete a batch of catalog variants.\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogVariantDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-variant-bulk-delete-jobs/{job_id}/": {
        "get": {
          "operationId": "get_delete_variants_job",
          "summary": "Get Delete Variants Job",
          "description": "Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-variant-bulk-delete-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Variants"
        }
      },
      "/api/catalog-category-bulk-create-jobs/": {
        "get": {
          "operationId": "get_create_categories_jobs",
          "summary": "Get Create Categories Jobs",
          "description": "Get all catalog category bulk create jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-category-bulk-create-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        },
        "post": {
          "operationId": "spawn_create_categories_job",
          "summary": "Spawn Create Categories Job",
          "description": "Create a catalog category bulk create job to create a batch of catalog categories.\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryCreateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-category-bulk-create-jobs/{job_id}/": {
        "get": {
          "operationId": "get_create_categories_job",
          "summary": "Get Create Categories Job",
          "description": "Get a catalog category bulk create job with the given job ID.\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-category-bulk-create-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-category]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "categories"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-category-bulk-update-jobs/": {
        "get": {
          "operationId": "get_update_categories_jobs",
          "summary": "Get Update Categories Jobs",
          "description": "Get all catalog category bulk update jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-category-bulk-update-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        },
        "post": {
          "operationId": "spawn_update_categories_job",
          "summary": "Spawn Update Categories Job",
          "description": "Create a catalog category bulk update job to update a batch of catalog categories.\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryUpdateJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-category-bulk-update-jobs/{job_id}/": {
        "get": {
          "operationId": "get_update_categories_job",
          "summary": "Get Update Categories Job",
          "description": "Get a catalog category bulk update job with the given job ID.\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-category-bulk-update-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[catalog-category]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "external_id",
                    "name",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "categories"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-category-bulk-delete-jobs/": {
        "get": {
          "operationId": "get_delete_categories_jobs",
          "summary": "Get Delete Categories Jobs",
          "description": "Get all catalog category bulk delete jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "fields[catalog-category-bulk-delete-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        },
        "post": {
          "operationId": "spawn_delete_categories_job",
          "summary": "Spawn Delete Categories Job",
          "description": "Create a catalog category bulk delete job to delete a batch of catalog categories.\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostCatalogCategoryDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-category-bulk-delete-jobs/{job_id}/": {
        "get": {
          "operationId": "get_delete_categories_job",
          "summary": "Get Delete Categories Job",
          "description": "Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "description": "ID of the job to retrieve.",
              "required": true,
              "schema": {
                "description": "ID of the job to retrieve.",
                "type": "string",
                "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
              }
            },
            {
              "name": "fields[catalog-category-bulk-delete-job]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count",
                    "completed_count",
                    "failed_count",
                    "completed_at",
                    "expires_at",
                    "errors"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Categories"
        }
      },
      "/api/catalog-categories/{id}/relationships/items/": {
        "get": {
          "operationId": "get_catalog_category_relationships_items",
          "summary": "Get Catalog Category Relationships Items",
          "description": "Get all items in the given category ID.\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogCategoryItemListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "post": {
          "operationId": "create_catalog_category_relationships_items",
          "summary": "Create Catalog Category Relationships Items",
          "description": "Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryItemOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "patch": {
          "operationId": "update_catalog_category_relationships_items",
          "summary": "Update Catalog Category Relationships Items",
          "description": "Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryItemOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "delete": {
          "operationId": "delete_catalog_category_relationships_items",
          "summary": "Delete Catalog Category Relationships Items",
          "description": "Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryItemOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/catalog-items/{id}/relationships/categories/": {
        "get": {
          "operationId": "get_catalog_item_relationships_categories",
          "summary": "Get Catalog Item Relationships Categories",
          "description": "Get all catalog categories that a particular item is in.\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetCatalogItemCategoryListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "post": {
          "operationId": "create_catalog_item_relationships_categories",
          "summary": "Create Catalog Item Relationships Categories",
          "description": "Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCategoryOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "patch": {
          "operationId": "update_catalog_item_relationships_categories",
          "summary": "Update Catalog Item Relationships Categories",
          "description": "Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCategoryOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "delete": {
          "operationId": "delete_catalog_item_relationships_categories",
          "summary": "Delete Catalog Item Relationships Categories",
          "description": "Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogItemCategoryOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Catalogs"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "catalogs:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/data-privacy-deletion-jobs/": {
        "post": {
          "operationId": "request_profile_deletion",
          "summary": "Request Profile Deletion",
          "description": "Request a deletion for the profiles corresponding to one of the following identifiers: `email`, `phone_number`, or `profile_id`. If multiple identifiers are provided, we will return an error.\nAll profiles that match the provided identifier will be deleted.\n        The deletion occurs asynchronously; however, once it has completed, the deleted profile will appear on the [Deleted Profiles page](https://www.klaviyo.com/account/deleted).\n        For more information on the deletion process, please refer to our [Help Center docs on how to handle GDPR and CCPA deletion requests](https://help.klaviyo.com/hc/en-us/articles/360004217631-How-to-Handle-GDPR-Requests#record-gdpr-and-ccpa%20%20-deletion-requests2).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`data-privacy:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Data Privacy"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "data-privacy:write"
          ]
        }
      },
      "/api/events/": {
        "get": {
          "operationId": "get_events",
          "summary": "Get Events",
          "description": "Get all events in an account\nRequests can be sorted by the following fields: `datetime`, `timestamp`\nInclude parameters can be provided to get the following related resource data: `metrics`, `profiles`\nReturns a maximum of 200 events per page.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`",
          "parameters": [
            {
              "name": "fields[event]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metric_id",
                    "profile_id",
                    "timestamp",
                    "event_properties",
                    "datetime",
                    "uuid"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[metric]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[profile]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties",
                    "subscriptions",
                    "subscriptions.email",
                    "subscriptions.email.marketing",
                    "subscriptions.email.marketing.consent",
                    "subscriptions.email.marketing.timestamp",
                    "subscriptions.email.marketing.method",
                    "subscriptions.email.marketing.method_detail",
                    "subscriptions.email.marketing.custom_method_detail",
                    "subscriptions.email.marketing.double_optin",
                    "subscriptions.email.marketing.suppressions",
                    "subscriptions.email.marketing.suppressions.reason",
                    "subscriptions.email.marketing.suppressions.timestamp",
                    "subscriptions.email.marketing.list_suppressions",
                    "subscriptions.email.marketing.list_suppressions.list_id",
                    "subscriptions.email.marketing.list_suppressions.reason",
                    "subscriptions.email.marketing.list_suppressions.timestamp",
                    "subscriptions.sms",
                    "subscriptions.sms.marketing",
                    "subscriptions.sms.marketing.consent",
                    "subscriptions.sms.marketing.timestamp",
                    "subscriptions.sms.marketing.method",
                    "subscriptions.sms.marketing.method_detail"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`metric_id`: `equals`<br>`profile_id`: `equals`<br>`datetime`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metrics",
                    "profiles"
                  ]
                }
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "datetime",
                  "-datetime",
                  "timestamp",
                  "-timestamp"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEventResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "events:read"
          ]
        },
        "post": {
          "operationId": "create_event",
          "summary": "Create Event",
          "description": "Create an event. Events are created asynchronously.\nSuccessful response indicates that the event was validated and submitted for processing, but does not guarantee that processing is complete.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Event to create.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "events:write"
          ]
        }
      },
      "/api/events/{id}/": {
        "get": {
          "operationId": "get_event",
          "summary": "Get Event",
          "description": "Get an event with the given event ID.\nInclude parameters can be provided to get the following related resource data: `metrics`, `profiles`<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the event",
              "required": true,
              "schema": {
                "description": "ID of the event",
                "type": "string"
              }
            },
            {
              "name": "fields[event]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metric_id",
                    "profile_id",
                    "timestamp",
                    "event_properties",
                    "datetime",
                    "uuid"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[metric]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[profile]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties",
                    "subscriptions",
                    "subscriptions.email",
                    "subscriptions.email.marketing",
                    "subscriptions.email.marketing.consent",
                    "subscriptions.email.marketing.timestamp",
                    "subscriptions.email.marketing.method",
                    "subscriptions.email.marketing.method_detail",
                    "subscriptions.email.marketing.custom_method_detail",
                    "subscriptions.email.marketing.double_optin",
                    "subscriptions.email.marketing.suppressions",
                    "subscriptions.email.marketing.suppressions.reason",
                    "subscriptions.email.marketing.suppressions.timestamp",
                    "subscriptions.email.marketing.list_suppressions",
                    "subscriptions.email.marketing.list_suppressions.list_id",
                    "subscriptions.email.marketing.list_suppressions.reason",
                    "subscriptions.email.marketing.list_suppressions.timestamp",
                    "subscriptions.sms",
                    "subscriptions.sms.marketing",
                    "subscriptions.sms.marketing.consent",
                    "subscriptions.sms.marketing.timestamp",
                    "subscriptions.sms.marketing.method",
                    "subscriptions.sms.marketing.method_detail"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metrics",
                    "profiles"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEventResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "events:read"
          ]
        }
      },
      "/api/events/{id}/metrics/": {
        "get": {
          "operationId": "get_event_metrics",
          "summary": "Get Event Metrics",
          "description": "Get the metric for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the event",
              "required": true,
              "schema": {
                "description": "ID of the event",
                "type": "string"
              }
            },
            {
              "name": "fields[metric]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetMetricResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "events:read",
            "metrics:read"
          ]
        }
      },
      "/api/events/{id}/profiles/": {
        "get": {
          "operationId": "get_event_profiles",
          "summary": "Get Event Profiles",
          "description": "Get the profile associated with an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the event",
              "required": true,
              "schema": {
                "description": "ID of the event",
                "type": "string"
              }
            },
            {
              "name": "additional-fields[profile]",
              "in": "query",
              "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "predictive_analytics"
                  ]
                }
              }
            },
            {
              "name": "fields[profile]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties",
                    "subscriptions",
                    "subscriptions.email",
                    "subscriptions.email.marketing",
                    "subscriptions.email.marketing.consent",
                    "subscriptions.email.marketing.timestamp",
                    "subscriptions.email.marketing.method",
                    "subscriptions.email.marketing.method_detail",
                    "subscriptions.email.marketing.custom_method_detail",
                    "subscriptions.email.marketing.double_optin",
                    "subscriptions.email.marketing.suppressions",
                    "subscriptions.email.marketing.suppressions.reason",
                    "subscriptions.email.marketing.suppressions.timestamp",
                    "subscriptions.email.marketing.list_suppressions",
                    "subscriptions.email.marketing.list_suppressions.list_id",
                    "subscriptions.email.marketing.list_suppressions.reason",
                    "subscriptions.email.marketing.list_suppressions.timestamp",
                    "subscriptions.sms",
                    "subscriptions.sms.marketing",
                    "subscriptions.sms.marketing.consent",
                    "subscriptions.sms.marketing.timestamp",
                    "subscriptions.sms.marketing.method",
                    "subscriptions.sms.marketing.method_detail",
                    "predictive_analytics",
                    "predictive_analytics.historic_clv",
                    "predictive_analytics.predicted_clv",
                    "predictive_analytics.total_clv",
                    "predictive_analytics.historic_number_of_orders",
                    "predictive_analytics.predicted_number_of_orders",
                    "predictive_analytics.average_days_between_orders",
                    "predictive_analytics.average_order_value",
                    "predictive_analytics.churn_probability",
                    "predictive_analytics.expected_date_of_next_order"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "events:read",
            "profiles:read"
          ]
        }
      },
      "/api/events/{id}/relationships/metrics/": {
        "get": {
          "operationId": "get_event_relationships_metrics",
          "summary": "Get Event Relationships Metrics",
          "description": "Get a list of related Metrics for an Event<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEventMetricsRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "events:read",
            "metrics:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/events/{id}/relationships/profiles/": {
        "get": {
          "operationId": "get_event_relationships_profiles",
          "summary": "Get Event Relationships Profiles",
          "description": "Get profile [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetEventProfilesRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Events"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "events:read",
            "profiles:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/flows/": {
        "get": {
          "operationId": "get_flows",
          "summary": "Get Flows",
          "description": "Get all flows in an account.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "fields[flow-action]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[flow]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`status`: `equals`<br>`archived`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`trigger_type`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-actions"
                  ]
                }
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 50. Min: 1. Max: 50.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 50,
                "maximum": 50,
                "minimum": 1
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "status",
                  "-status",
                  "trigger_type",
                  "-trigger_type",
                  "updated",
                  "-updated"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        }
      },
      "/api/flows/{id}/": {
        "get": {
          "operationId": "get_flow",
          "summary": "Get Flow",
          "description": "Get a flow with the given flow ID.\nInclude parameters can be provided to get the following related resource data: `flow-actions`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[flow-action]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[flow]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-actions"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        },
        "patch": {
          "operationId": "update_flow",
          "summary": "Update Flow Status",
          "description": "Update the status of a flow with the given flow ID, and all actions in that flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the Flow to update. Ex: XVTP5Q",
              "required": true,
              "schema": {
                "description": "ID of the Flow to update. Ex: XVTP5Q",
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchFlowResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:write"
          ]
        }
      },
      "/api/flows/{flow_id}/flow-actions/": {
        "get": {
          "operationId": "get_flow_flow_actions",
          "summary": "Get Flow Actions For Flow",
          "description": "Get all flow actions associated with the given flow ID.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "flow_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[flow-action]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`action_type`: `any`, `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 50. Min: 1. Max: 50.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 50,
                "maximum": 50,
                "minimum": 1
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "action_type",
                  "-action_type",
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "status",
                  "-status",
                  "updated",
                  "-updated"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        }
      },
      "/api/flows/{flow_id}/tags/": {
        "get": {
          "operationId": "get_flow_tags",
          "summary": "Get Flow Tags",
          "description": "Return all tags associated with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
          "parameters": [
            {
              "name": "flow_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read",
            "tags:read"
          ]
        }
      },
      "/api/flow-actions/{id}/": {
        "get": {
          "operationId": "get_flow_action",
          "summary": "Get Flow Action",
          "description": "Get a flow action from a flow with the given flow action ID.\nInclude parameters can be provided to get the following related resource data: `flows`, `flow-messages`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[flow-action]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[flow-message]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "channel",
                    "content",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[flow]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-messages",
                    "flows"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        }
      },
      "/api/flow-actions/{action_id}/flow/": {
        "get": {
          "operationId": "get_flow_action_flow",
          "summary": "Get Flow For Flow Action",
          "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "action_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[flow]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "status",
                    "archived",
                    "created",
                    "updated",
                    "trigger_type"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        }
      },
      "/api/flow-actions/{action_id}/flow-messages/": {
        "get": {
          "operationId": "get_flow_action_messages",
          "summary": "Get Messages For Flow Action",
          "description": "Get all flow messages associated with the given flow action ID.\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "action_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[flow-message]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "channel",
                    "content",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 50. Min: 1. Max: 50.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 50,
                "maximum": 50,
                "minimum": 1
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "updated",
                  "-updated"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowMessageResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        }
      },
      "/api/flow-messages/{id}/": {
        "get": {
          "operationId": "get_flow_message",
          "summary": "Get Flow Message",
          "description": "Get the flow message of a flow with the given message ID.\nInclude parameters can be provided to get the following related resource data: 'flow-actions'<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[flow-action]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[flow-message]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "channel",
                    "content",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "flow-action"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowMessageResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        }
      },
      "/api/flow-messages/{message_id}/flow-action/": {
        "get": {
          "operationId": "get_flow_message_action",
          "summary": "Get Flow Action For Message",
          "description": "Get the flow action for a flow message with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "message_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[flow-action]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "action_type",
                    "status",
                    "created",
                    "updated",
                    "settings",
                    "tracking_options",
                    "send_options",
                    "send_options.use_smart_sending",
                    "send_options.is_transactional",
                    "render_options",
                    "render_options.shorten_links",
                    "render_options.add_org_prefix",
                    "render_options.add_info_link",
                    "render_options.add_opt_out_language"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ]
        }
      },
      "/api/flows/{id}/relationships/flow-actions/": {
        "get": {
          "operationId": "get_flow_relationships_flow_actions",
          "summary": "Get Flow Relationships Flow Actions",
          "description": "Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow actions associated with the given flow ID.\nFlow action relationships can be sorted by the following fields, in ascending and descending order: `id`,  `status`, `created`, `updated`\nUse filters to narrow your results.\nReturns a maximum of 50 flow action relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`action_type`: `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 50. Min: 1. Max: 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 50,
                "maximum": 100,
                "minimum": 1
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "status",
                  "-status",
                  "updated",
                  "-updated"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowFlowActionRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/flows/{id}/relationships/tags/": {
        "get": {
          "operationId": "get_flow_relationships_tags",
          "summary": "Get Flow Relationships Tags",
          "description": "Return the tag IDs of all tags associated with the given flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowTagRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/flow-actions/{id}/relationships/flow/": {
        "get": {
          "operationId": "get_flow_action_relationships_flow",
          "summary": "Get Flow Action Relationships Flow",
          "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionFlowRelationshipResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/flow-actions/{id}/relationships/flow-messages/": {
        "get": {
          "operationId": "get_flow_action_relationships_messages",
          "summary": "Get Flow Action Relationships Messages",
          "description": "Get all relationships for flow messages associated with the given flow action ID.\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 50. Min: 1. Max: 50.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 50,
                "maximum": 50,
                "minimum": 1
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "updated",
                  "-updated"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowActionFlowMessageRelationshipResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/flow-messages/{id}/relationships/flow-action/": {
        "get": {
          "operationId": "get_flow_message_relationships_action",
          "summary": "Get Flow Message Relationships Action",
          "description": "Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message's flow action, given the flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowMessageFlowActionRelationshipResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/lists/": {
        "get": {
          "operationId": "get_lists",
          "summary": "Get Lists",
          "description": "Get all lists in an account.\nFilter to request a subset of all lists. Lists can be filtered by `id`, `name`, `created`, and `updated` fields.\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:read`",
          "parameters": [
            {
              "name": "fields[list]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:read"
          ]
        },
        "post": {
          "operationId": "create_list",
          "summary": "Create List",
          "description": "Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostListResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:write"
          ]
        }
      },
      "/api/lists/{id}/": {
        "get": {
          "operationId": "get_list",
          "summary": "Get List",
          "description": "Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "required": true,
              "schema": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              }
            },
            {
              "name": "fields[list]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:write"
          ]
        },
        "patch": {
          "operationId": "update_list",
          "summary": "Update List",
          "description": "Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "required": true,
              "schema": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPartialUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchListResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:write"
          ]
        },
        "delete": {
          "operationId": "delete_list",
          "summary": "Delete List",
          "description": "Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "required": true,
              "schema": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:write"
          ]
        }
      },
      "/api/lists/{list_id}/tags/": {
        "get": {
          "operationId": "get_list_tags",
          "summary": "Get List Tags",
          "description": "Return all tags associated with the given list ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`tags:read`",
          "parameters": [
            {
              "name": "list_id",
              "in": "path",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "required": true,
              "schema": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              }
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "list:read",
            "tags:read"
          ]
        }
      },
      "/api/lists/{list_id}/profiles/": {
        "get": {
          "operationId": "get_list_profiles",
          "summary": "Get List Profiles",
          "description": "Get all profiles within a list with the given list ID.\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:read`\n`profiles:read`",
          "parameters": [
            {
              "name": "list_id",
              "in": "path",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "required": true,
              "schema": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              }
            },
            {
              "name": "additional-fields[profile]",
              "in": "query",
              "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "predictive_analytics"
                  ]
                }
              }
            },
            {
              "name": "fields[profile]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties",
                    "subscriptions",
                    "subscriptions.email",
                    "subscriptions.email.marketing",
                    "subscriptions.email.marketing.consent",
                    "subscriptions.email.marketing.timestamp",
                    "subscriptions.email.marketing.method",
                    "subscriptions.email.marketing.method_detail",
                    "subscriptions.email.marketing.custom_method_detail",
                    "subscriptions.email.marketing.double_optin",
                    "subscriptions.email.marketing.suppressions",
                    "subscriptions.email.marketing.suppressions.reason",
                    "subscriptions.email.marketing.suppressions.timestamp",
                    "subscriptions.email.marketing.list_suppressions",
                    "subscriptions.email.marketing.list_suppressions.list_id",
                    "subscriptions.email.marketing.list_suppressions.reason",
                    "subscriptions.email.marketing.list_suppressions.timestamp",
                    "subscriptions.sms",
                    "subscriptions.sms.marketing",
                    "subscriptions.sms.marketing.consent",
                    "subscriptions.sms.marketing.timestamp",
                    "subscriptions.sms.marketing.method",
                    "subscriptions.sms.marketing.method_detail",
                    "predictive_analytics",
                    "predictive_analytics.historic_clv",
                    "predictive_analytics.predicted_clv",
                    "predictive_analytics.total_clv",
                    "predictive_analytics.historic_number_of_orders",
                    "predictive_analytics.predicted_number_of_orders",
                    "predictive_analytics.average_days_between_orders",
                    "predictive_analytics.average_order_value",
                    "predictive_analytics.churn_probability",
                    "predictive_analytics.expected_date_of_next_order"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 20. Min: 1. Max: 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 20,
                "maximum": 100,
                "minimum": 1
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:read",
            "profiles:read"
          ]
        }
      },
      "/api/lists/{id}/relationships/tags/": {
        "get": {
          "operationId": "get_list_relationships_tags",
          "summary": "Get List Relationships Tags",
          "description": "Returns the tag IDs of all tags associated with the given list.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListTagRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "list:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/lists/{id}/relationships/profiles/": {
        "get": {
          "operationId": "get_list_relationships_profiles",
          "summary": "Get List Relationships Profiles",
          "description": "Get profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:read`\n`profiles:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:read",
            "profiles:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "post": {
          "operationId": "create_list_relationships",
          "summary": "Add Profile To List",
          "description": "Add a profile to a list with the given list ID.\nIt is recommended that you use the [Subscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/subscribe_profiles) if you're trying to give a profile consent to receive email marketing.\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembersAddQuery"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:write",
            "profiles:write"
          ]
        },
        "delete": {
          "operationId": "delete_list_relationships",
          "summary": "Remove Profile From List",
          "description": "Remove a profile from a list with the given list ID.\nThe provided profile will no longer receive marketing from this particular list once removed.\nRemoving a profile from a list will not impact the profile's consent status or subscription status in general. To update a profile's subscription status, please use the [Unsubscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/unsubscribe_profiles).\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembersDeleteQuery"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "list:write",
            "profiles:write"
          ]
        }
      },
      "/api/metrics/": {
        "get": {
          "operationId": "get_metrics",
          "summary": "Get Metrics",
          "description": "Get all metrics in an account.\nRequests can be filtered by the following fields: integration `name`, integration `category`\nReturns a maximum of 200 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
          "parameters": [
            {
              "name": "fields[metric]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`integration.name`: `equals`<br>`integration.category`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetMetricResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Metrics"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "metrics:read"
          ]
        }
      },
      "/api/metrics/{id}/": {
        "get": {
          "operationId": "get_metric",
          "summary": "Get Metric",
          "description": "Get a metric with the given metric ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Metric ID",
              "required": true,
              "schema": {
                "description": "Metric ID",
                "type": "string"
              }
            },
            {
              "name": "fields[metric]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated",
                    "integration"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetMetricResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Metrics"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "metrics:read"
          ]
        }
      },
      "/api/metric-aggregates/": {
        "post": {
          "operationId": "query_metric_aggregates",
          "summary": "Query Metric Aggregates",
          "description": "Query and aggregate event data associated with a metric, including native Klaviyo metrics, integration-specific metrics, and custom events. Queries must be passed in the JSON body of your `POST` request.\n\nResults can be filtered and grouped by time, event, or profile dimensions.\n\nTo learn more about how to use this endpoint, check out our new [Using the Query Metric Aggregates Endpoint guide](https://developers.klaviyo.com/en/docs/using-the-query-metric-aggregates-endpoint).\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets)\n* `sort`: sort results by a specified field, such as `\"-timestamp\"`\n* `page_cursor`: results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/reference/api_overview#pagination)\n* `page_size`: limit the number of returned results per page\n* `by`: optional attributes used to group by the aggregation function\n    * When using `by` attributes, an empty `dimensions` response is expected when the counts for the events do not have the associated dimension requested by the set `by` attribute. For example, a query including `\"by\": [\"$flow\"]` will return an empty dimensions response for counts of metrics not associated with a `$flow`\n* `measurement`: the measurement key supports the following values:\n    * `\"sum_value\"`: perform a summation of the `_Event Value_`, optionally partitioned over any dimension provided in the `by` field\n    * `\"count\"`: counts the number of events associated to a metric, optionally partitioned over any dimension provided in the `by` field\n    * `\"unique\"` counts the number of unique customers associated to a metric, optionally partitioned over any dimension provided in the `by` field\n* `interval`: aggregation interval, such as `\"hour\"`,`\"day\"`,`\"week\"`, and `\"month\"`\n* `metric_id`: the metric ID used in the aggregation\n* `filter`: list of filters for specific fields, must include time range using ISO 8601 format (`\"YYYY-MM-DDTHH:MM:SS.mmmmmm\"`)\n    * The time range can be filtered by providing a `greater-or-equal` filter on the datetime field, such as `\"greater-or-equal(datetime,2021-07-01T00:00:00)\"` and a `less-than` filter on the same datetime field, such as `\"less-than(datetime,2022-07-01T00:00:00)\"`\n    * The time range may span a maximum of one year. Time range dates may be set to a maximum of 5 years prior to the current date\n    * Filter the list of supported aggregate dimensions using the common filter syntax, such as `\"equals(URL,\\\"https://www.klaviyo.com/\\\")\"`\n* `timezone`: the timezone used when processing the query. Case sensitive. This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones)\n    * While the payload accepts a timezone, the response datetimes returned will be in UTC.\n\nFor a comprehensive list of native Klaviyo metrics and their associated attributes for grouping and filtering, please refer to the [metrics attributes guide](https://developers.klaviyo.com/en/docs/supported_metrics_and_attributes).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`metrics:read`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Retrieve Metric Aggregations",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricAggregateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostMetricAggregateResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Metrics"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "metrics:read"
          ]
        }
      },
      "/api/profiles/": {
        "get": {
          "operationId": "get_profiles",
          "summary": "Get Profiles",
          "description": "Get all profiles in an account.\nProfiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `updated`, `email`<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`",
          "parameters": [
            {
              "name": "additional-fields[profile]",
              "in": "query",
              "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "predictive_analytics"
                  ]
                }
              }
            },
            {
              "name": "fields[profile]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties",
                    "subscriptions",
                    "subscriptions.email",
                    "subscriptions.email.marketing",
                    "subscriptions.email.marketing.consent",
                    "subscriptions.email.marketing.timestamp",
                    "subscriptions.email.marketing.method",
                    "subscriptions.email.marketing.method_detail",
                    "subscriptions.email.marketing.custom_method_detail",
                    "subscriptions.email.marketing.double_optin",
                    "subscriptions.email.marketing.suppressions",
                    "subscriptions.email.marketing.suppressions.reason",
                    "subscriptions.email.marketing.suppressions.timestamp",
                    "subscriptions.email.marketing.list_suppressions",
                    "subscriptions.email.marketing.list_suppressions.list_id",
                    "subscriptions.email.marketing.list_suppressions.reason",
                    "subscriptions.email.marketing.list_suppressions.timestamp",
                    "subscriptions.sms",
                    "subscriptions.sms.marketing",
                    "subscriptions.sms.marketing.consent",
                    "subscriptions.sms.marketing.timestamp",
                    "subscriptions.sms.marketing.method",
                    "subscriptions.sms.marketing.method_detail",
                    "predictive_analytics",
                    "predictive_analytics.historic_clv",
                    "predictive_analytics.predicted_clv",
                    "predictive_analytics.total_clv",
                    "predictive_analytics.historic_number_of_orders",
                    "predictive_analytics.predicted_number_of_orders",
                    "predictive_analytics.average_days_between_orders",
                    "predictive_analytics.average_order_value",
                    "predictive_analytics.churn_probability",
                    "predictive_analytics.expected_date_of_next_order"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`external_id`: `any`, `equals`<br>`_kx`: `equals`<br>`created`: `greater-than`, `less-than`<br>`updated`: `greater-than`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 20. Min: 1. Max: 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 20,
                "maximum": 100,
                "minimum": 1
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "email",
                  "-email",
                  "id",
                  "-id",
                  "updated",
                  "-updated"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "profiles:read"
          ]
        },
        "post": {
          "operationId": "create_profile",
          "summary": "Create Profile",
          "description": "Create a new profile.\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account, you'll need to include at least one other identifier attribute (`email` or `external_id`) in addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostProfileResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "profiles:write"
          ]
        }
      },
      "/api/profiles/{id}/": {
        "get": {
          "operationId": "get_profile",
          "summary": "Get Profile",
          "description": "Get the profile with the given profile ID.\nInclude parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships\"<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "additional-fields[profile]",
              "in": "query",
              "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "predictive_analytics"
                  ]
                }
              }
            },
            {
              "name": "fields[list]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[profile]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties",
                    "subscriptions",
                    "subscriptions.email",
                    "subscriptions.email.marketing",
                    "subscriptions.email.marketing.consent",
                    "subscriptions.email.marketing.timestamp",
                    "subscriptions.email.marketing.method",
                    "subscriptions.email.marketing.method_detail",
                    "subscriptions.email.marketing.custom_method_detail",
                    "subscriptions.email.marketing.double_optin",
                    "subscriptions.email.marketing.suppressions",
                    "subscriptions.email.marketing.suppressions.reason",
                    "subscriptions.email.marketing.suppressions.timestamp",
                    "subscriptions.email.marketing.list_suppressions",
                    "subscriptions.email.marketing.list_suppressions.list_id",
                    "subscriptions.email.marketing.list_suppressions.reason",
                    "subscriptions.email.marketing.list_suppressions.timestamp",
                    "subscriptions.sms",
                    "subscriptions.sms.marketing",
                    "subscriptions.sms.marketing.consent",
                    "subscriptions.sms.marketing.timestamp",
                    "subscriptions.sms.marketing.method",
                    "subscriptions.sms.marketing.method_detail",
                    "predictive_analytics",
                    "predictive_analytics.historic_clv",
                    "predictive_analytics.predicted_clv",
                    "predictive_analytics.total_clv",
                    "predictive_analytics.historic_number_of_orders",
                    "predictive_analytics.predicted_number_of_orders",
                    "predictive_analytics.average_days_between_orders",
                    "predictive_analytics.average_order_value",
                    "predictive_analytics.churn_probability",
                    "predictive_analytics.expected_date_of_next_order"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "fields[segment]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "include",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#relationships",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "lists",
                    "segments"
                  ]
                }
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "profiles:read"
          ]
        },
        "patch": {
          "operationId": "update_profile",
          "summary": "Update Profile",
          "description": "Update the profile with the given profile ID.\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account, you'll need to include at least one other identifier attribute (`email` or `external_id`) in addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
              "required": true,
              "schema": {
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePartialUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchProfileResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "profiles:write"
          ]
        }
      },
      "/api/profiles/{profile_id}/lists/": {
        "get": {
          "operationId": "get_profile_lists",
          "summary": "Get Profile Lists",
          "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`profiles:read`",
          "parameters": [
            {
              "name": "profile_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[list]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "list:read",
            "profiles:read"
          ]
        }
      },
      "/api/profiles/{profile_id}/segments/": {
        "get": {
          "operationId": "get_profile_segments",
          "summary": "Get Profile Segments",
          "description": "Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
          "parameters": [
            {
              "name": "profile_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[segment]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "profiles:read",
            "segments:read"
          ]
        }
      },
      "/api/profile-suppression-bulk-create-jobs/": {
        "post": {
          "operationId": "suppress_profiles",
          "summary": "Suppress Profiles",
          "description": "Manually suppress one or more profiles. Such profiles will have `USER_SUPPRESSED` as their suppression reason. Manually suppressed profiles _will not_ receive email marketing. Learn more about suppressed profiles [in this document](https://help.klaviyo.com/hc/en-us/articles/115005246108-Understanding-suppressed-email-profiles#what-is-a-suppressed-profile-1).\nNot supported for SMS marketing.\nMaximum number of profile can be submitted for suppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`\n`subscriptions:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuppressionCreateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "profiles:write",
            "subscriptions:write"
          ]
        }
      },
      "/api/profile-unsuppression-bulk-create-jobs/": {
        "post": {
          "operationId": "unsuppress_profiles",
          "summary": "Unsuppress Profiles",
          "description": "Unsuppress one or more profiles, this will remove any Manual Suppressions (USER_SUPPRESSED) on these profiles. A profile may receive email marketing after a manual suppression is removed so long as they have not revoked consent, i.e. unsubscribed.\nNot supported for SMS marketing. Only manual suppressions (USER_SUPPRESSED) will be removed. `UNSUBSCRIBE` and `SPAM_REPORT` suppressions are removed whenever a [profile resubscribes](https://developers.klaviyo.com/en/reference/subscribe_profiles). `INVALID_EMAIL` and `HARD_BOUNCE` suppressions cannot be removed by the API.\nMaximum number of profile can be submitted for unsuppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, no action will be taken.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "subscriptions:write"
          ]
        }
      },
      "/api/profile-subscription-bulk-create-jobs/": {
        "post": {
          "operationId": "subscribe_profiles",
          "summary": "Subscribe Profiles",
          "description": "Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message.\nTo add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/reference/create_list_relationships).\nThis API will remove any `UNSUBSCRIBE`, `SPAM_REPORT` or `USER_SUPPRESSED` suppressions from the provided profiles. Learn more about suppressed profiles in [this document](https://help.klaviyo.com/hc/en-us/articles/115005246108-Understanding-suppressed-email-profiles#what-is-a-suppressed-profile-1).\nMaximum number of profile can be submitted for subscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`\n`subscriptions:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels. If a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCreateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "list:write",
            "profiles:write",
            "subscriptions:write"
          ]
        }
      },
      "/api/profile-unsubscription-bulk-create-jobs/": {
        "post": {
          "operationId": "unsubscribe_profiles",
          "summary": "Unsubscribe Profiles",
          "description": "Unsubscribe one or more profiles to email marketing, SMS marketing, or both.\nTo remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/reference/delete_list_relationships).\nMaximum number of profile can be submitted for unsubscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`\n`subscriptions:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list. Either email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "75/s",
            "steady": "700/m"
          },
          "x-klaviyo-scopes": [
            "list:write",
            "profiles:write",
            "subscriptions:write"
          ]
        }
      },
      "/api/profiles/{id}/relationships/lists/": {
        "get": {
          "operationId": "get_profile_relationships_lists",
          "summary": "Get Profile Relationships Lists",
          "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`profiles:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileListRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "list:read",
            "profiles:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/profiles/{id}/relationships/segments/": {
        "get": {
          "operationId": "get_profile_relationships_segments",
          "summary": "Get Profile Relationships Segments",
          "description": "Get segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileSegmentRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Profiles"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "profiles:read",
            "segments:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/segments/": {
        "get": {
          "operationId": "get_segments",
          "summary": "Get Segments",
          "description": "Get all segments in an account.\nFilter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields.\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`segments:read`",
          "parameters": [
            {
              "name": "fields[segment]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentResponseCollectionCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "segments:read"
          ]
        }
      },
      "/api/segments/{id}/": {
        "get": {
          "operationId": "get_segment",
          "summary": "Get Segment",
          "description": "Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`segments:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[segment]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentResponseCompoundDocument"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "segments:read"
          ]
        },
        "patch": {
          "operationId": "update_segment",
          "summary": "Update Segment",
          "description": "Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`segments:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentPartialUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchSegmentResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "segments:write"
          ]
        }
      },
      "/api/segments/{segment_id}/tags/": {
        "get": {
          "operationId": "get_segment_tags",
          "summary": "Get Segment Tags",
          "description": "Return all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
          "parameters": [
            {
              "name": "segment_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "segments:read",
            "tags:read"
          ]
        }
      },
      "/api/segments/{segment_id}/profiles/": {
        "get": {
          "operationId": "get_segment_profiles",
          "summary": "Get Segment Profiles",
          "description": "Get all profiles within the given segment ID.\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
          "parameters": [
            {
              "name": "segment_id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "additional-fields[profile]",
              "in": "query",
              "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "predictive_analytics"
                  ]
                }
              }
            },
            {
              "name": "fields[profile]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "email",
                    "phone_number",
                    "external_id",
                    "first_name",
                    "last_name",
                    "organization",
                    "title",
                    "image",
                    "created",
                    "updated",
                    "last_event_date",
                    "location",
                    "location.address1",
                    "location.address2",
                    "location.city",
                    "location.country",
                    "location.latitude",
                    "location.longitude",
                    "location.region",
                    "location.zip",
                    "location.timezone",
                    "properties",
                    "subscriptions",
                    "subscriptions.email",
                    "subscriptions.email.marketing",
                    "subscriptions.email.marketing.consent",
                    "subscriptions.email.marketing.timestamp",
                    "subscriptions.email.marketing.method",
                    "subscriptions.email.marketing.method_detail",
                    "subscriptions.email.marketing.custom_method_detail",
                    "subscriptions.email.marketing.double_optin",
                    "subscriptions.email.marketing.suppressions",
                    "subscriptions.email.marketing.suppressions.reason",
                    "subscriptions.email.marketing.suppressions.timestamp",
                    "subscriptions.email.marketing.list_suppressions",
                    "subscriptions.email.marketing.list_suppressions.list_id",
                    "subscriptions.email.marketing.list_suppressions.reason",
                    "subscriptions.email.marketing.list_suppressions.timestamp",
                    "subscriptions.sms",
                    "subscriptions.sms.marketing",
                    "subscriptions.sms.marketing.consent",
                    "subscriptions.sms.marketing.timestamp",
                    "subscriptions.sms.marketing.method",
                    "subscriptions.sms.marketing.method_detail",
                    "predictive_analytics",
                    "predictive_analytics.historic_clv",
                    "predictive_analytics.predicted_clv",
                    "predictive_analytics.total_clv",
                    "predictive_analytics.historic_number_of_orders",
                    "predictive_analytics.predicted_number_of_orders",
                    "predictive_analytics.average_days_between_orders",
                    "predictive_analytics.average_order_value",
                    "predictive_analytics.churn_probability",
                    "predictive_analytics.expected_date_of_next_order"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[size]",
              "in": "query",
              "description": "Default: 20. Min: 1. Max: 100.",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 20,
                "maximum": 100,
                "minimum": 1
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetProfileResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "profiles:read",
            "segments:read"
          ]
        }
      },
      "/api/segments/{id}/relationships/tags/": {
        "get": {
          "operationId": "get_segment_relationships_tags",
          "summary": "Get Segment Relationships Tags",
          "description": "If `related_resource` is `tags`, returns the tag IDs of all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentTagRelationshipListResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "segments:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/segments/{id}/relationships/profiles/": {
        "get": {
          "operationId": "get_segment_relationships_profiles",
          "summary": "Get Segment Relationships Profiles",
          "description": "Get all profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "profiles:read",
            "segments:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/tags/": {
        "get": {
          "operationId": "get_tags",
          "summary": "Get Tags",
          "description": "List all tags in an account.\nTags can be filtered by `name`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 50 tags per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "-id",
                  "name",
                  "-name"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Tags"
        },
        "post": {
          "operationId": "create_tag",
          "summary": "Create Tag",
          "description": "Create a tag. An account cannot have more than **500** unique tags.\nA tag belongs to a single tag group. If the `tag_group_id` is not specified, the tag is added to the account's default tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Tags"
        }
      },
      "/api/tags/{id}/": {
        "get": {
          "operationId": "get_tag",
          "summary": "Get Tag",
          "description": "Retrieve the tag with the given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag ID",
              "required": true,
              "schema": {
                "description": "The Tag ID",
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
              }
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Tags"
        },
        "patch": {
          "operationId": "update_tag",
          "summary": "Update Tag",
          "description": "Update the tag with the given tag ID.\nOnly a tag's `name` can be changed. A tag cannot be moved from one tag group to another.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag ID",
              "required": true,
              "schema": {
                "description": "The Tag ID",
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Tags"
        },
        "delete": {
          "operationId": "delete_tag",
          "summary": "Delete Tag",
          "description": "Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag ID",
              "required": true,
              "schema": {
                "description": "The Tag ID",
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DeleteTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Tags"
        }
      },
      "/api/tag-groups/": {
        "get": {
          "operationId": "get_tag_groups",
          "summary": "Get Tag Groups",
          "description": "List all tag groups in an account. Every account has one default tag group.\nTag groups can be filtered by `name`, `exclusive`, and `default`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 25 tag groups per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "fields[tag-group]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`exclusive`: `equals`<br>`default`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "-id",
                  "name",
                  "-name"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Tag Groups"
        },
        "post": {
          "operationId": "create_tag_group",
          "summary": "Create Tag Group",
          "description": "Create a tag group. An account cannot have more than **50** unique tag groups.\nIf `exclusive` is not specified `true` or `false`, the tag group defaults to non-exclusive.\nIf a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGroupCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Tag Groups"
        }
      },
      "/api/tag-groups/{id}/": {
        "get": {
          "operationId": "get_tag_group",
          "summary": "Get Tag Group",
          "description": "Retrieve the tag group with the given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag Group ID",
              "required": true,
              "schema": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              }
            },
            {
              "name": "fields[tag-group]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Tag Groups"
        },
        "patch": {
          "operationId": "update_tag_group",
          "summary": "Update Tag Group",
          "description": "Update the tag group with the given tag group ID.\nOnly a tag group's `name` can be changed. A tag group's `exclusive` or `default` value cannot be changed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag Group ID",
              "required": true,
              "schema": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGroupUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Tag Groups"
        },
        "delete": {
          "operationId": "delete_tag_group",
          "summary": "Delete Tag Group",
          "description": "Delete the tag group with the given tag group ID.\nAny tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag Group ID",
              "required": true,
              "schema": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DeleteTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Tag Groups"
        }
      },
      "/api/tags/{id}/tag-group/": {
        "get": {
          "operationId": "get_tag_tag_group",
          "summary": "Get Tag Tag Group",
          "description": "Returns the tag group resource for a given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag ID",
              "required": true,
              "schema": {
                "description": "The Tag ID",
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
              }
            },
            {
              "name": "fields[tag-group]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Tags"
        }
      },
      "/api/tag-groups/{id}/tags/": {
        "get": {
          "operationId": "get_tag_group_tags",
          "summary": "Get Tag Group Tags",
          "description": "Return the tags for a given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Tag Group ID",
              "required": true,
              "schema": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              }
            },
            {
              "name": "fields[tag]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Tag Groups"
        }
      },
      "/api/tags/{id}/relationships/flows/": {
        "get": {
          "operationId": "get_tag_relationships_flows",
          "summary": "Get Tag Relationships Flows",
          "description": "Returns the IDs of all flows associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagFlowRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "post": {
          "operationId": "create_tag_relationships_flows",
          "summary": "Create Tag Relationships Flows",
          "description": "Associate a tag with one or more flows. Any flow cannot be associated with more than **100** tags.\n\nUse the request body to pass in the ID(s) of the flow(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagFlowOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "delete": {
          "operationId": "delete_tag_relationships_flows",
          "summary": "Delete Tag Relationships Flows",
          "description": "Remove a tag's association with one or more flows.\n\nUse the request body to pass in the ID(s) of the flows(s) whose association with the tag will be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagFlowOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "flows:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/tags/{id}/relationships/campaigns/": {
        "get": {
          "operationId": "get_tag_relationships_campaigns",
          "summary": "Get Tag Relationships Campaigns",
          "description": "Returns the IDs of all campaigns associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagCampaignRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "post": {
          "operationId": "create_tag_relationships_campaigns",
          "summary": "Create Tag Relationships Campaigns",
          "description": "Associate a tag with one or more campaigns. Any campaign cannot be associated with more than **100** tags.\n\nUse the request body to pass in the ID(s) of the campaign(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCampaignOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "delete": {
          "operationId": "delete_tag_relationships_campaigns",
          "summary": "Delete Tag Relationships Campaigns",
          "description": "Remove a tag's association with one or more campaigns.\n\nUse the request body to pass in the ID(s) of the campaign(s) whose association with the tag will be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCampaignOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "campaigns:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/tags/{id}/relationships/lists/": {
        "get": {
          "operationId": "get_tag_relationships_lists",
          "summary": "Get Tag Relationships Lists",
          "description": "Returns the IDs of all lists associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagListRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "list:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "post": {
          "operationId": "create_tag_relationships_lists",
          "summary": "Create Tag Relationships Lists",
          "description": "Associate a tag with one or more lists. Any list cannot be associated with more than **100** tags.\n\nUse the request body to pass in the ID(s) of the lists(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "list:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "delete": {
          "operationId": "delete_tag_relationships_lists",
          "summary": "Delete Tag Relationships Lists",
          "description": "Remove a tag's association with one or more lists.\n\nUse the request body to pass in the ID(s) of the list(s) whose association with the tag will be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "list:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/tags/{id}/relationships/segments/": {
        "get": {
          "operationId": "get_tag_relationships_segments",
          "summary": "Get Tag Relationships Segments",
          "description": "Returns the IDs of all segments associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagSegmentRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "segments:read",
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "post": {
          "operationId": "create_tag_relationships_segments",
          "summary": "Create Tag Relationships Segments",
          "description": "Associate a tag with one or more segments. Any segment cannot be associated with more than **100** tags.\n\nUse the request body to pass in the ID(s) of the segments(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagSegmentOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "segments:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        },
        "delete": {
          "operationId": "delete_tag_relationships_segments",
          "summary": "Delete Tag Relationships Segments",
          "description": "Remove a tag's association with one or more segments.\n\nUse the request body to pass in the ID(s) of the segments(s) whose association with the tag will be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagSegmentOp"
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "segments:write",
            "tags:write"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/tags/{id}/relationships/tag-group/": {
        "get": {
          "operationId": "get_tag_relationships_tag_group",
          "summary": "Get Tag Relationships Tag Group",
          "description": "Returns the ids of all tag groups related to the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagTagGroupRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/tag-groups/{id}/relationships/tags/": {
        "get": {
          "operationId": "get_tag_group_relationships_tags",
          "summary": "Get Tag Group Relationships Tags",
          "description": "Returns the tag IDs of all tags inside the given tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagGroupTagRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "tags:read"
          ],
          "x-klaviyo-subtag": "Relationships"
        }
      },
      "/api/templates/": {
        "get": {
          "operationId": "get_templates",
          "summary": "Get Templates",
          "description": "Get all templates in an account.\nFilter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated`\nReturns a maximum of 20 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
          "parameters": [
            {
              "name": "fields[template]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html",
                    "text",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sorting",
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "-created",
                  "id",
                  "-id",
                  "name",
                  "-name",
                  "updated",
                  "-updated"
                ]
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTemplateResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "templates:read"
          ]
        },
        "post": {
          "operationId": "create_template",
          "summary": "Create Template",
          "description": "Create a new custom HTML template.\nIf there are 1,000 or more templates in an account, creation will fail as there is a limit of 1,000 templates that can be created via the API.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateCreateQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "template:write"
          ]
        }
      },
      "/api/templates/{id}/": {
        "get": {
          "operationId": "get_template",
          "summary": "Get Template",
          "description": "Get a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of template",
              "required": true,
              "schema": {
                "description": "The ID of template",
                "type": "string"
              }
            },
            {
              "name": "fields[template]",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#sparse-fieldsets",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html",
                    "text",
                    "created",
                    "updated"
                  ]
                }
              },
              "explode": false
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "templates:read"
          ]
        },
        "patch": {
          "operationId": "update_template",
          "summary": "Update Template",
          "description": "Update a template with the given template ID. Does not currently update drag & drop templates.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of template",
              "required": true,
              "schema": {
                "description": "The ID of template",
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateUpdateQuery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "template:write"
          ]
        },
        "delete": {
          "operationId": "delete_template",
          "summary": "Delete Template",
          "description": "Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The ID of template",
              "required": true,
              "schema": {
                "description": "The ID of template",
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DeleteTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "template:write"
          ]
        }
      },
      "/api/template-render/": {
        "post": {
          "operationId": "create_template_render",
          "summary": "Create Template Render",
          "description": "Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).\n* `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.\n\nEmail templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.\n\nEx. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateRenderQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "templates:read"
          ]
        }
      },
      "/api/template-clone/": {
        "post": {
          "operationId": "create_template_clone",
          "summary": "Create Template Clone",
          "description": "Create a clone of a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateCloneQuery"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTemplateResponse"
                  }
                }
              }
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "tags": [
            "Templates"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "10/s",
            "steady": "150/m"
          },
          "x-klaviyo-scopes": [
            "template:write"
          ]
        }
      },
      "/client/subscriptions/": {
        "post": {
          "operationId": "create_client_subscription",
          "summary": "Create Client Subscription",
          "description": "Create a new subscription for the given list ID and channel:\n\n* Email `email`\n* SMS `phone_number`\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/profile-subscription-bulk-create-jobs](https://developers.klaviyo.com/en/reference/subscribe_profiles)<br><br>*Rate limits*:<br>Burst: `100/s`<br>Steady: `100/m`\n\n**Scopes:**\n`subscriptions:write`",
          "parameters": [
            {
              "name": "company_id",
              "in": "query",
              "description": "Your company ID.",
              "required": true,
              "schema": {
                "description": "Your company ID.",
                "type": "string",
                "example": "COMPANY_ID"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnsiteSubscriptionCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            }
          },
          "security": [],
          "tags": [
            "Client"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "100/s",
            "steady": "100/m"
          },
          "x-klaviyo-scopes": [
            "subscriptions:write"
          ]
        }
      },
      "/client/events/": {
        "post": {
          "operationId": "create_client_event",
          "summary": "Create Client Event",
          "description": "Create a new event to track a profile's activity.\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create events from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
          "parameters": [
            {
              "name": "company_id",
              "in": "query",
              "description": "ID of the Company to create event",
              "required": true,
              "schema": {
                "description": "ID of the Company to create event",
                "type": "string",
                "example": "YOUR_COMPANY_ID"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "description": "Event to create.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "security": [],
          "tags": [
            "Client"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "events:write"
          ]
        }
      },
      "/client/profiles/": {
        "post": {
          "operationId": "create_client_profile",
          "summary": "Create or Update Client Profile",
          "description": "Create and update properties about a profile without tracking an associated event.\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`profiles:write`",
          "parameters": [
            {
              "name": "company_id",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "revision",
              "in": "header",
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "required": true,
              "schema": {
                "type": "string",
                "default": "2023-02-22"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnsiteProfileCreateQuery"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "description": "",
              "$ref": "#/components/responses/ClientError"
            },
            "5XX": {
              "description": "",
              "$ref": "#/components/responses/ServerError"
            }
          },
          "security": [],
          "tags": [
            "Client"
          ],
          "x-klaviyo-pre-release": "None",
          "x-klaviyo-ratelimit": {
            "burst": "350/s",
            "steady": "3500/m"
          },
          "x-klaviyo-scopes": [
            "profiles:write"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "CatalogItemResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemEnum"
            },
            "id": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "description": "The ID of the catalog item in an external system.",
                  "type": "string",
                  "example": "SAMPLE-DATA-ITEM-1"
                },
                "title": {
                  "description": "The title of the catalog item.",
                  "type": "string",
                  "example": "Ocean Blue Shirt (Sample)"
                },
                "description": {
                  "description": "A description of the catalog item.",
                  "type": "string",
                  "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                },
                "price": {
                  "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                  "type": "number",
                  "example": 42
                },
                "url": {
                  "description": "URL pointing to the location of the catalog item on your website.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "image_full_url": {
                  "description": "URL pointing to the location of a full image of the catalog item.",
                  "type": "string",
                  "example": "https://via.placeholder.com/300"
                },
                "image_thumbnail_url": {
                  "description": "URL pointing to the location of an image thumbnail of the catalog item",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "images": {
                  "description": "List of URLs pointing to the locations of images of the catalog item.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://via.placeholder.com/150"
                  ]
                },
                "custom_metadata": {
                  "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                  "type": "object",
                  "example": {
                    "Top Pick": true
                  }
                },
                "published": {
                  "description": "Boolean value indicating whether the catalog item is published.",
                  "type": "boolean",
                  "example": true
                },
                "created": {
                  "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCatalogItemResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "variants": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-variant"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogItemResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-variant"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantEnum"
            },
            "id": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "description": "The ID of the catalog item variant in an external system.",
                  "type": "string",
                  "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                },
                "title": {
                  "description": "The title of the catalog item variant.",
                  "type": "string",
                  "example": "Ocean Blue Shirt (Sample) Variant Medium"
                },
                "description": {
                  "description": "A description of the catalog item variant.",
                  "type": "string",
                  "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                },
                "sku": {
                  "description": "The SKU of the catalog item variant.",
                  "type": "string",
                  "example": "OBS-MD"
                },
                "inventory_policy": {
                  "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                  "type": "integer",
                  "example": 2,
                  "enum": [
                    0,
                    1,
                    2
                  ]
                },
                "inventory_quantity": {
                  "description": "The quantity of the catalog item variant currently in stock.",
                  "type": "number",
                  "example": 25
                },
                "price": {
                  "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                  "type": "number",
                  "example": 42
                },
                "url": {
                  "description": "URL pointing to the location of the catalog item variant on your website.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "image_full_url": {
                  "description": "URL pointing to the location of a full image of the catalog item variant.",
                  "type": "string",
                  "example": "https://via.placeholder.com/300"
                },
                "image_thumbnail_url": {
                  "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "images": {
                  "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://via.placeholder.com/150"
                  ]
                },
                "custom_metadata": {
                  "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                  "type": "object",
                  "example": {
                    "Top Pick": true
                  }
                },
                "published": {
                  "description": "Boolean value indicating whether the catalog item variant is published.",
                  "type": "boolean",
                  "example": true
                },
                "created": {
                  "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCatalogVariantResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-item"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogVariantResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-item"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryEnum"
            },
            "id": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "description": "The ID of the catalog category in an external system.",
                  "type": "string",
                  "example": "SAMPLE-DATA-CATEGORY-APPAREL"
                },
                "name": {
                  "description": "The name of the catalog category.",
                  "type": "string",
                  "example": "Sample Data Category Apparel"
                },
                "updated": {
                  "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCatalogCategoryResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-item"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogCategoryResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-item"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "GetCatalogCategoryItemListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetCatalogItemCategoryListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "EventResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/EventEnum"
            },
            "id": {
              "description": "The Event ID",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "metric_id": {
                  "description": "The Metric ID",
                  "type": "string"
                },
                "profile_id": {
                  "description": "Profile ID of the associated profile, if available",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Event timestamp in seconds",
                  "type": "string"
                },
                "event_properties": {
                  "description": "Event properties, can include attribution data, identifiers and extra properties",
                  "type": "object"
                },
                "datetime": {
                  "description": "Event timestamp in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string"
                },
                "uuid": {
                  "description": "A unique identifier for the event, this can be used as a cursor in pagination",
                  "type": "string"
                }
              },
              "required": [
                "metric_id"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetEventResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EventResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "profiles": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "profile"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "metrics": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "metric"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MetricResponseObjectResource"
                  },
                  {
                    "$ref": "#/components/schemas/ProfileResponseObjectResource"
                  }
                ]
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetEventResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "profile"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "metrics": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "metric"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MetricResponseObjectResource"
                  },
                  {
                    "$ref": "#/components/schemas/ProfileResponseObjectResource"
                  }
                ]
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "MetricResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/MetricEnum"
            },
            "id": {
              "description": "The Metric ID",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the metric",
                  "type": "string"
                },
                "created": {
                  "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string"
                },
                "updated": {
                  "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string"
                },
                "integration": {
                  "description": "The integration associated with the event",
                  "type": "object"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetMetricResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MetricResponseObjectResource"
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "ProfileLocation": {
          "type": "object",
          "properties": {
            "address1": {
              "description": "First line of street address",
              "type": "string",
              "example": "89 E 42nd St"
            },
            "address2": {
              "description": "Second line of street address",
              "type": "string",
              "example": "1st floor"
            },
            "city": {
              "description": "City name",
              "type": "string",
              "example": "New York"
            },
            "country": {
              "description": "Country name",
              "type": "string",
              "example": "United States"
            },
            "latitude": {
              "description": "Latitude coordinate. We recommend providing a precision of four decimal places.",
              "example": "40.7128",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "longitude": {
              "description": "Longitude coordinate. We recommend providing a precision of four decimal places.",
              "example": "74.0060",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "region": {
              "description": "Region within a country, such as state or province",
              "type": "string",
              "example": "NY"
            },
            "zip": {
              "description": "Zip code",
              "type": "string",
              "example": "10017"
            },
            "timezone": {
              "description": "Time zone name. We recommend using time zones from the IANA Time Zone Database.",
              "type": "string",
              "example": "America/New_York"
            }
          }
        },
        "EmailMarketingSuppression": {
          "type": "object",
          "properties": {
            "reason": {
              "description": "The reason the profile was suppressed from the list.",
              "type": "string",
              "example": "HARD_BOUNCE"
            },
            "timestamp": {
              "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
              "type": "string",
              "format": "date-time",
              "example": "2023-02-21T20:07:38+00:00"
            }
          },
          "required": [
            "reason",
            "timestamp"
          ]
        },
        "EmailMarketingListSuppression": {
          "type": "object",
          "properties": {
            "list_id": {
              "description": "The ID of list to which the suppression applies.",
              "type": "string",
              "example": "Y6nRLr"
            },
            "reason": {
              "description": "The reason the profile was suppressed from the list.",
              "type": "string",
              "example": "USER_SUPPRESSED"
            },
            "timestamp": {
              "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
              "type": "string",
              "format": "date-time",
              "example": "2023-02-21T20:07:38+00:00"
            }
          },
          "required": [
            "list_id",
            "reason",
            "timestamp"
          ]
        },
        "EmailMarketing": {
          "type": "object",
          "properties": {
            "consent": {
              "description": "The consent status for email marketing.",
              "type": "string",
              "example": "SUBSCRIBED"
            },
            "timestamp": {
              "description": "The timestamp when consent record or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
              "type": "string",
              "format": "date-time",
              "example": "2023-02-21T20:07:38+00:00"
            },
            "method": {
              "description": "The method by which the profile was subscribed to email marketing.",
              "type": "string",
              "example": "PREFERENCE_PAGE"
            },
            "method_detail": {
              "description": "Additional details about the method by which the profile was subscribed to SMS marketing. This may be empty if no details were provided.",
              "type": "string",
              "example": "mydomain.com/signup"
            },
            "custom_method_detail": {
              "description": "Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided.",
              "type": "string",
              "example": "marketing drive"
            },
            "double_optin": {
              "description": "Whether the profile was subscribed to email marketing using a double opt-in.",
              "type": "boolean",
              "example": "True"
            },
            "suppressions": {
              "description": "The global email marketing suppressions for this profile.",
              "$ref": "#/components/schemas/EmailMarketingSuppression"
            },
            "list_suppressions": {
              "description": "The list suppressions for this profile.",
              "$ref": "#/components/schemas/EmailMarketingListSuppression"
            }
          },
          "required": [
            "consent",
            "method"
          ]
        },
        "EmailChannel": {
          "type": "object",
          "properties": {
            "marketing": {
              "description": "The email marketing subscription.",
              "$ref": "#/components/schemas/EmailMarketing"
            }
          }
        },
        "SMSMarketing": {
          "type": "object",
          "properties": {
            "consent": {
              "description": "The consent status for SMS marketing.",
              "type": "string",
              "example": "SUBSCRIBED"
            },
            "timestamp": {
              "description": "The timestamp when consent record or updated for SMS marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
              "type": "string",
              "format": "date-time",
              "example": "2023-02-21T20:07:38+00:00"
            },
            "method": {
              "description": "The method by which the profile was subscribed to SMS marketing.",
              "type": "string",
              "example": "TEXT"
            },
            "method_detail": {
              "description": "Additional details about the method which the profile was subscribed to SMS marketing. This may be empty if no details were provided.",
              "type": "string",
              "example": "JOIN"
            }
          },
          "required": [
            "consent",
            "timestamp",
            "method",
            "method_detail"
          ]
        },
        "SMSChannel": {
          "type": "object",
          "properties": {
            "marketing": {
              "description": "The SMS marketing subscription.",
              "$ref": "#/components/schemas/SMSMarketing"
            }
          }
        },
        "Subscriptions": {
          "type": "object",
          "properties": {
            "email": {
              "description": "The email channel subscription.",
              "$ref": "#/components/schemas/EmailChannel"
            },
            "sms": {
              "description": "The SMS channel subscription.",
              "$ref": "#/components/schemas/SMSChannel"
            }
          }
        },
        "PredictiveAnalytics": {
          "type": "object",
          "properties": {
            "historic_clv": {
              "description": "Total value of all historically placed orders",
              "type": "number",
              "example": 93.87
            },
            "predicted_clv": {
              "description": "Predicted value of all placed orders in the next 365 days",
              "type": "number",
              "example": 27.24
            },
            "total_clv": {
              "description": "Sum of historic and predicted CLV",
              "type": "number",
              "example": 121.11
            },
            "historic_number_of_orders": {
              "description": "Number of already placed orders",
              "type": "integer",
              "example": 2
            },
            "predicted_number_of_orders": {
              "description": "Predicted number of placed orders in the next 365 days",
              "type": "number",
              "example": 0.54
            },
            "average_days_between_orders": {
              "description": "Average number of days between orders (None if only one order has been placed)",
              "type": "number",
              "example": 189
            },
            "average_order_value": {
              "description": "Average value of placed orders",
              "type": "number",
              "example": 46.94
            },
            "churn_probability": {
              "description": "Probability the customer has churned",
              "type": "number",
              "example": 0.89
            },
            "expected_date_of_next_order": {
              "description": "Expected date of next order, as calculated at the time of their most recent order",
              "type": "string",
              "format": "date-time",
              "example": "2022-11-08T00:00:00"
            }
          }
        },
        "ProfileResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileEnum"
            },
            "id": {
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "Individual's email address",
                  "type": "string",
                  "example": "sarah.mason@klaviyo-demo.com"
                },
                "phone_number": {
                  "description": "Individual's phone number in E.164 format",
                  "type": "string",
                  "example": "+15005550006"
                },
                "external_id": {
                  "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                  "type": "string",
                  "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                },
                "first_name": {
                  "description": "Individual's first name",
                  "type": "string",
                  "example": "Sarah"
                },
                "last_name": {
                  "description": "Individual's last name",
                  "type": "string",
                  "example": "Mason"
                },
                "organization": {
                  "description": "Name of the company or organization within the company for whom the individual works",
                  "type": "string",
                  "example": "Klaviyo"
                },
                "title": {
                  "description": "Individual's job title",
                  "type": "string",
                  "example": "Engineer"
                },
                "image": {
                  "description": "URL pointing to the location of a profile image",
                  "type": "string",
                  "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                },
                "created": {
                  "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "last_event_date": {
                  "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                  "type": "object",
                  "example": {
                    "pseudonym": "Dr. Octopus"
                  }
                },
                "subscriptions": {
                  "$ref": "#/components/schemas/Subscriptions"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetProfileResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProfileResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "lists": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "list"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "segments": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "segment"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  },
                  {
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ProfileEnum"
                      },
                      "attributes": {
                        "properties": {
                          "predictive_analytics": {
                            "$ref": "#/components/schemas/PredictiveAnalytics"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetEventMetricsRelationshipListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "metric"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetEventProfilesRelationshipListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetMetricResponse": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/MetricResponseObjectResource"
            }
          },
          "required": [
            "data"
          ]
        },
        "ListResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ListEnum"
            },
            "id": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A helpful name to label the list",
                  "type": "string",
                  "example": "Newsletter"
                },
                "created": {
                  "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetListResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ListResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "profiles": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "profile"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "tags": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetListResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "profile"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "tag"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "GetListTagRelationshipListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "ListTagResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagEnum"
            },
            "id": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag name",
                  "type": "string",
                  "example": "My Tag"
                }
              },
              "required": [
                "name"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetListTagResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ListTagResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "tag-group": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag-group"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "lists": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "list"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "segments": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "segment"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "campaigns": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "campaign"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "flows": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetListRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "SegmentResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/SegmentEnum"
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A helpful name to label the segment ",
                  "type": "string",
                  "example": "Repeat Purchasers"
                },
                "created": {
                  "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetSegmentResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SegmentResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "profiles": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "profile"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "tags": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetSegmentResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "profile"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "tag"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "GetSegmentTagRelationshipListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "SegmentTagResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagEnum"
            },
            "id": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag name",
                  "type": "string",
                  "example": "My Tag"
                }
              },
              "required": [
                "name"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetSegmentTagResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SegmentTagResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "tag-group": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag-group"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "lists": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "list"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "segments": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "segment"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "campaigns": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "campaign"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "flows": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetSegmentRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetProfileResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProfileResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "lists": {
                            "type": "object",
                            "properties": {
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            }
                          },
                          "segments": {
                            "type": "object",
                            "properties": {
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ProfileEnum"
                      },
                      "attributes": {
                        "properties": {
                          "predictive_analytics": {
                            "$ref": "#/components/schemas/PredictiveAnalytics"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetProfileResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "list"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "segment"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ListResponseObjectResource"
                  },
                  {
                    "$ref": "#/components/schemas/SegmentResponseObjectResource"
                  }
                ]
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ListResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "profiles": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "profile"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "tags": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetProfileListRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "list"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetSegmentResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SegmentResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "profiles": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "profile"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "tags": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetProfileSegmentRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "segment"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "FlowResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/FlowEnum"
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "archived": {
                  "type": "boolean"
                },
                "created": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "trigger_type": {
                  "type": "string"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetFlowResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FlowResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "flow-actions": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow-action"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "tags": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetFlowResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-actions": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow-action"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "tag"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "UtmParamInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ]
        },
        "EmailTrackingOptions": {
          "type": "object",
          "properties": {
            "add_utm": {
              "type": "boolean"
            },
            "utm_params": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtmParamInfo"
              }
            },
            "is_tracking_opens": {
              "type": "boolean"
            },
            "is_tracking_clicks": {
              "type": "boolean"
            }
          },
          "required": [
            "add_utm",
            "utm_params",
            "is_tracking_opens",
            "is_tracking_clicks"
          ]
        },
        "SMSTrackingOptions": {
          "type": "object",
          "properties": {
            "add_utm": {
              "type": "boolean"
            },
            "utm_params": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtmParamInfo"
              }
            }
          },
          "required": [
            "add_utm",
            "utm_params"
          ]
        },
        "SendOptions": {
          "type": "object",
          "properties": {
            "use_smart_sending": {
              "type": "boolean"
            },
            "is_transactional": {
              "type": "boolean"
            }
          },
          "required": [
            "use_smart_sending",
            "is_transactional"
          ]
        },
        "SMSRenderOptions": {
          "type": "object",
          "properties": {
            "shorten_links": {
              "type": "boolean"
            },
            "add_org_prefix": {
              "type": "boolean"
            },
            "add_info_link": {
              "type": "boolean"
            },
            "add_opt_out_language": {
              "type": "boolean"
            }
          },
          "required": [
            "shorten_links",
            "add_org_prefix",
            "add_info_link",
            "add_opt_out_language"
          ]
        },
        "FlowActionResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/FlowActionEnum"
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "action_type": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "settings": {
                  "type": "object"
                },
                "tracking_options": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTrackingOptions"
                    },
                    {
                      "$ref": "#/components/schemas/SMSTrackingOptions"
                    }
                  ]
                },
                "send_options": {
                  "$ref": "#/components/schemas/SendOptions"
                },
                "render_options": {
                  "$ref": "#/components/schemas/SMSRenderOptions"
                }
              }
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetFlowActionResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "flows": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "flow-messages": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow-message"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetFlowFlowActionRelationshipListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow-action"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetFlowTagRelationshipListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "FlowTagResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagEnum"
            },
            "id": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag name",
                  "type": "string",
                  "example": "My Tag"
                }
              },
              "required": [
                "name"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetFlowTagResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FlowTagResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "tag-group": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag-group"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "lists": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "list"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "segments": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "segment"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "campaigns": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "campaign"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "flows": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetFlowActionResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flows": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "flow-messages": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow-message"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                  },
                  {
                    "$ref": "#/components/schemas/FlowResponseObjectResource"
                  }
                ]
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetFlowResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-actions": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow-action"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "tag"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "GetFlowActionFlowRelationshipResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "EmailMessageContent": {
          "type": "object",
          "properties": {
            "subject": {
              "type": "string"
            },
            "preview_text": {
              "type": "string"
            },
            "from_email": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            }
          },
          "required": [
            "subject",
            "preview_text",
            "from_email",
            "from_name"
          ]
        },
        "SMSMessageContent": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string"
            },
            "media": {
              "type": "string"
            }
          },
          "required": [
            "body",
            "media"
          ]
        },
        "FlowMessageResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/FlowMessageEnum"
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                },
                "content": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailMessageContent"
                    },
                    {
                      "$ref": "#/components/schemas/SMSMessageContent"
                    }
                  ]
                },
                "created": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              },
              "required": [
                "name",
                "channel",
                "content"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetFlowMessageResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "flow-action": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow-action"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetFlowActionFlowMessageRelationshipResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow-message"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetFlowMessageResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-action": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow-action"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetFlowActionResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flows": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "flow-messages": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow-message"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "GetFlowMessageFlowActionRelationshipResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow-action"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "AudiencesSubObject": {
          "type": "object",
          "properties": {
            "included": {
              "description": "A list of included audiences",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "Y6nRLr"
              ]
            },
            "excluded": {
              "description": "An optional list of excluded audiences",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "UTd5ui"
              ]
            }
          }
        },
        "SendOptionsSubObject": {
          "type": "object",
          "properties": {
            "use_smart_sending": {
              "description": "Use smart sending. Defaults to True",
              "type": "boolean"
            }
          }
        },
        "UTMParamsSubObject": {
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the UTM param",
              "type": "string",
              "example": "utm_medium"
            },
            "value": {
              "description": "Value of the UTM param. Can be templated data.",
              "type": "string",
              "example": "campaign"
            }
          },
          "required": [
            "name",
            "value"
          ]
        },
        "TrackingOptionsSubObject": {
          "type": "object",
          "properties": {
            "is_tracking_opens": {
              "description": "Whether the campaign is tracking open events. If not specified, uses company defaults.",
              "type": "boolean"
            },
            "is_tracking_clicks": {
              "description": "Whether the campaign is tracking click events. If not specified, uses company defaults.",
              "type": "boolean"
            },
            "is_add_utm": {
              "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used.",
              "type": "boolean"
            },
            "utm_params": {
              "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UTMParamsSubObject"
              }
            }
          }
        },
        "StaticScheduleOptions": {
          "type": "object",
          "properties": {
            "datetime": {
              "description": "The time to send at",
              "type": "string",
              "format": "date-time",
              "example": "2022-11-08T00:00:00"
            },
            "is_local": {
              "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False.",
              "type": "boolean"
            },
            "send_past_recipients_immediately": {
              "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False.",
              "type": "boolean"
            }
          },
          "required": [
            "datetime"
          ]
        },
        "ThrottledScheduleOptions": {
          "type": "object",
          "properties": {
            "datetime": {
              "description": "The time to send at",
              "type": "string",
              "format": "date-time"
            },
            "throttle_percentage": {
              "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]",
              "type": "integer"
            }
          },
          "required": [
            "datetime",
            "throttle_percentage"
          ]
        },
        "STOScheduleOptions": {
          "type": "object",
          "properties": {
            "date": {
              "description": "The day to send on",
              "type": "string",
              "format": "date"
            }
          },
          "required": [
            "date"
          ]
        },
        "SendStrategySubObject": {
          "type": "object",
          "properties": {
            "method": {
              "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate', 'smart_send_time']",
              "type": "string",
              "example": "static"
            },
            "options_static": {
              "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method.",
              "$ref": "#/components/schemas/StaticScheduleOptions"
            },
            "options_throttled": {
              "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method.",
              "$ref": "#/components/schemas/ThrottledScheduleOptions"
            },
            "options_sto": {
              "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'smart_send_time' method.",
              "$ref": "#/components/schemas/STOScheduleOptions"
            }
          },
          "required": [
            "method"
          ]
        },
        "CampaignResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignEnum"
            },
            "id": {
              "description": "The campaign ID",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The campaign name",
                  "type": "string"
                },
                "status": {
                  "description": "The current status of the campaign",
                  "type": "string"
                },
                "archived": {
                  "description": "Whether the campaign has been archived or not",
                  "type": "boolean"
                },
                "channel": {
                  "description": "The type of campaign",
                  "type": "string"
                },
                "audiences": {
                  "description": "The audiences to be included and/or excluded from the campaign",
                  "$ref": "#/components/schemas/AudiencesSubObject"
                },
                "send_options": {
                  "description": "Options to use when sending a campaign",
                  "$ref": "#/components/schemas/SendOptionsSubObject"
                },
                "message": {
                  "description": "The id of the message associated with the campaign",
                  "type": "string"
                },
                "tracking_options": {
                  "description": "The tracking options associated with the campaign",
                  "$ref": "#/components/schemas/TrackingOptionsSubObject"
                },
                "send_strategy": {
                  "description": "The send strategy the campaign will send with",
                  "$ref": "#/components/schemas/SendStrategySubObject"
                },
                "created_at": {
                  "description": "The datetime when the campaign was created",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "scheduled_at": {
                  "description": "The datetime when the campaign was scheduled for future sending",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated_at": {
                  "description": "The datetime when the campaign was last updated by a user or the system",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "send_time": {
                  "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              },
              "required": [
                "name",
                "status",
                "archived",
                "channel",
                "audiences",
                "send_options",
                "message",
                "tracking_options",
                "send_strategy",
                "created_at",
                "scheduled_at",
                "updated_at",
                "send_time"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCampaignResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CampaignResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "tags": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCampaignResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "tag"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TagResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "ContentSubObject": {
          "type": "object",
          "properties": {
            "subject": {
              "description": "The subject of the message",
              "type": "string",
              "example": "Buy our product!"
            },
            "preview_text": {
              "description": "Preview text associated with the message",
              "type": "string",
              "example": "My preview text"
            },
            "from_email": {
              "description": "The email the message should be sent from",
              "type": "string",
              "example": "store@my-company.com"
            },
            "from_label": {
              "description": "The label associated with the from_email",
              "type": "string",
              "example": "My Company"
            },
            "template_id": {
              "description": "The ID of the template associated to the message",
              "type": "string",
              "example": "RipRmi"
            },
            "template_name": {
              "description": "The name of the template associated to the message",
              "type": "string",
              "example": "My email template"
            }
          }
        },
        "SendTimeSubObject": {
          "type": "object",
          "properties": {
            "datetime": {
              "description": "The datetime that the message is to be sent",
              "type": "string",
              "format": "date-time",
              "example": "2022-11-08T00:00:00"
            },
            "is_local": {
              "description": "Whether that datetime is to be a local datetime for the recipient",
              "type": "boolean"
            }
          },
          "required": [
            "datetime",
            "is_local"
          ]
        },
        "CampaignMessageResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignMessageEnum"
            },
            "id": {
              "description": "The message ID",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "label": {
                  "description": "The label or name on the message",
                  "type": "string"
                },
                "channel": {
                  "description": "The channel the message is to be sent on",
                  "type": "string"
                },
                "content": {
                  "$ref": "#/components/schemas/ContentSubObject",
                  "description": "Additional attributes relating to the content of the message"
                },
                "send_times": {
                  "description": "The list of appropriate Send Time Sub-objects associated with the message",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SendTimeSubObject"
                  }
                },
                "created_at": {
                  "description": "The datetime when the message was created",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated_at": {
                  "description": "The datetime when the message was last updated",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "campaign_id": {
                  "description": "The parent campaign id",
                  "type": "string"
                }
              },
              "required": [
                "label",
                "channel",
                "content",
                "campaign_id"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCampaignMessageResponse": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
            }
          },
          "required": [
            "data"
          ]
        },
        "GetCampaignTagRelationshipListResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignTagResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagEnum"
            },
            "id": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag name",
                  "type": "string",
                  "example": "My Tag"
                }
              },
              "required": [
                "name"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCampaignTagResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CampaignTagResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "tag-group": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag-group"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "lists": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "list"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "segments": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "segment"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "campaigns": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "campaign"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "flows": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "CampaignSendJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignSendJobEnum"
            },
            "id": {
              "description": "The ID of the campaign to send",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "status": {
                  "description": "The status of the send job",
                  "type": "string",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                }
              },
              "required": [
                "status"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCampaignSendJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignSendJobResponseObjectResource"
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignRecipientEstimationJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
            },
            "id": {
              "description": "The ID of the campaign used for estimating recipients",
              "type": "string",
              "example": "01GMRWDSA0ARTAKE1SFX8JGXAY"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "status": {
                  "description": "The status of the recipient estimation job",
                  "type": "string",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                }
              },
              "required": [
                "status"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCampaignRecipientEstimationJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignRecipientEstimationJobResponseObjectResource"
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignRecipientEstimationResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignRecipientEstimationEnum"
            },
            "id": {
              "description": "The ID of the campaign for which to get the estimated number of recipients",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "estimated_recipient_count": {
                  "description": "The estimated number of unique recipients the campaign will send to",
                  "type": "integer"
                }
              },
              "required": [
                "estimated_recipient_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetCampaignRecipientEstimationResponse": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignRecipientEstimationResponseObjectResource"
            }
          },
          "required": [
            "data"
          ]
        },
        "TemplateResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TemplateEnum"
            },
            "id": {
              "description": "The ID of template",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "company_id": {
                  "description": "The ID of the company the template belongs to",
                  "type": "string",
                  "example": "COMPANY_ID"
                },
                "name": {
                  "description": "The name of the template",
                  "type": "string"
                },
                "editor_type": {
                  "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n",
                  "type": "string"
                },
                "html": {
                  "description": "The rendered HTML of the template",
                  "type": "string"
                },
                "text": {
                  "description": "The template plain_text",
                  "type": "string"
                },
                "created": {
                  "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "updated": {
                  "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                }
              },
              "required": [
                "company_id",
                "name",
                "editor_type",
                "html"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetTemplateResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TemplateResponseObjectResource"
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetTemplateResponse": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateResponseObjectResource"
            }
          },
          "required": [
            "data"
          ]
        },
        "ErrorSource": {
          "type": "object",
          "properties": {
            "pointer": {
              "description": "A pointer to the source of the error in the request payload.",
              "type": "string",
              "example": "/data",
              "default": "/data"
            }
          },
          "required": [
            "pointer"
          ]
        },
        "CatalogJobErrorPayload": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Unique identifier for the error.",
              "type": "string",
              "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94"
            },
            "code": {
              "description": "A code for classifying the error type.",
              "type": "string",
              "example": "invalid"
            },
            "title": {
              "description": "A high-level message about the error.",
              "type": "string",
              "example": "Invalid input"
            },
            "detail": {
              "description": "Specific details about the error.",
              "type": "string",
              "example": "The payload provided in the request is invalid."
            },
            "source": {
              "description": "Additional information on the source of the error.",
              "$ref": "#/components/schemas/ErrorSource"
            }
          },
          "required": [
            "id",
            "code",
            "title",
            "detail",
            "source"
          ]
        },
        "CatalogItemCreateJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogItemCreateJobResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-item"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogItemCreateJobResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-item"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemUpdateJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogItemUpdateJobResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-item"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogItemUpdateJobResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-item"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemDeleteJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogItemDeleteJobResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-item"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogItemDeleteJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-item"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantCreateJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogVariantCreateJobResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "variants": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-variant"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogVariantCreateJobResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-variant"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantUpdateJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogVariantUpdateJobResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "variants": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-variant"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogVariantUpdateJobResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-variant"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantDeleteJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogVariantDeleteJobResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "variants": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-variant"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogVariantDeleteJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-variant"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryCreateJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogCategoryCreateJobResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "categories": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-category"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogCategoryCreateJobResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-category"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryUpdateJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "categories": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-category"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
              }
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogCategoryUpdateJobResponseCompoundDocument": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-category"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "included": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryDeleteJobResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "job_id": {
                  "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the asynchronous job.",
                  "type": "string",
                  "example": "processing",
                  "enum": [
                    "cancelled",
                    "complete",
                    "processing",
                    "queued"
                  ]
                },
                "created_at": {
                  "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "total_count": {
                  "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                  "type": "integer",
                  "example": 10
                },
                "completed_count": {
                  "description": "The total number of operations that have been completed by the job.",
                  "type": "integer",
                  "example": 9
                },
                "failed_count": {
                  "description": "The total number of operations that have failed as part of the job.",
                  "type": "integer",
                  "example": 1
                },
                "completed_at": {
                  "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "expires_at": {
                  "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "errors": {
                  "description": "Array of errors encountered during the processing of the job.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogJobErrorPayload"
                  }
                }
              },
              "required": [
                "job_id",
                "status",
                "created_at",
                "total_count"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "attributes",
            "links"
          ]
        },
        "GetCatalogCategoryDeleteJobResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "categories": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "catalog-category"
                                      ]
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetCatalogCategoryDeleteJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "catalog-category"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TagResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagEnum"
            },
            "id": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag name",
                  "type": "string",
                  "example": "My Tag"
                }
              },
              "required": [
                "name"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetTagResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "tag-group": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag-group"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "lists": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "list"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "segments": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "segment"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "campaigns": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "campaign"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          },
                          "flows": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "flow"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetTagResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tag-group": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "tag-group"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "lists": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "list"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "segment"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "campaigns": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "campaign"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "flows": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flow"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TagGroupResponseObjectResource": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagGroupEnum"
            },
            "id": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag Group name",
                  "type": "string",
                  "example": "My Tag Group"
                },
                "exclusive": {
                  "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                  "type": "boolean"
                },
                "default": {
                  "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "exclusive",
                "default"
              ]
            },
            "links": {
              "$ref": "#/components/schemas/ObjectLinks"
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "GetTagGroupResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagGroupResponseObjectResource"
                  },
                  {
                    "properties": {
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "tags": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "id"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "tag"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "links": {
                                "$ref": "#/components/schemas/RelationshipLinks"
                              }
                            },
                            "required": [
                              "data"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "links": {
              "$ref": "#/components/schemas/CollectionLinks"
            }
          },
          "required": [
            "data",
            "links"
          ]
        },
        "GetTagGroupResponse": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagGroupResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "tag"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "GetTagFlowRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetTagCampaignRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "campaign"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetTagListRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "list"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetTagSegmentRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "segment"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetTagTagGroupRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag-group"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "GetTagGroupTagRelationshipsResponseCollection": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "example": [
                      "abcd1234-ef56-gh78-ij90-abcdef123456",
                      "klmn1234-op56-qr78-st90-klmnop123456"
                    ]
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "description": "The ID of the catalog item in an external system.",
                  "type": "string",
                  "example": "SAMPLE-DATA-ITEM-1"
                },
                "integration_type": {
                  "description": "The integration type. Currently only \"$custom\" is supported.",
                  "type": "string",
                  "enum": [
                    "$custom"
                  ]
                },
                "title": {
                  "description": "The title of the catalog item.",
                  "type": "string",
                  "example": "Ocean Blue Shirt (Sample)"
                },
                "price": {
                  "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                  "type": "number",
                  "example": 42
                },
                "catalog_type": {
                  "description": "The type of catalog. Currently only \"$default\" is supported.",
                  "type": "string",
                  "example": "$default",
                  "default": "$default"
                },
                "description": {
                  "description": "A description of the catalog item.",
                  "type": "string",
                  "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                },
                "url": {
                  "description": "URL pointing to the location of the catalog item on your website.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "image_full_url": {
                  "description": "URL pointing to the location of a full image of the catalog item.",
                  "type": "string",
                  "example": "https://via.placeholder.com/300"
                },
                "image_thumbnail_url": {
                  "description": "URL pointing to the location of an image thumbnail of the catalog item",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "images": {
                  "description": "List of URLs pointing to the locations of images of the catalog item.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://via.placeholder.com/150"
                  ]
                },
                "custom_metadata": {
                  "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                  "type": "object",
                  "example": {
                    "Top Pick": true
                  }
                },
                "published": {
                  "description": "Boolean value indicating whether the catalog item is published.",
                  "type": "boolean",
                  "example": true,
                  "default": true
                }
              },
              "required": [
                "external_id",
                "title",
                "description",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-category"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogItemCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogItemResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "description": "The ID of the catalog item in an external system.",
                      "type": "string",
                      "example": "SAMPLE-DATA-ITEM-1"
                    },
                    "title": {
                      "description": "The title of the catalog item.",
                      "type": "string",
                      "example": "Ocean Blue Shirt (Sample)"
                    },
                    "description": {
                      "description": "A description of the catalog item.",
                      "type": "string",
                      "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                    },
                    "price": {
                      "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                      "type": "number",
                      "example": 42
                    },
                    "url": {
                      "description": "URL pointing to the location of the catalog item on your website.",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "image_full_url": {
                      "description": "URL pointing to the location of a full image of the catalog item.",
                      "type": "string",
                      "example": "https://via.placeholder.com/300"
                    },
                    "image_thumbnail_url": {
                      "description": "URL pointing to the location of an image thumbnail of the catalog item",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "images": {
                      "description": "List of URLs pointing to the locations of images of the catalog item.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "https://via.placeholder.com/150"
                      ]
                    },
                    "custom_metadata": {
                      "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                      "type": "object",
                      "example": {
                        "Top Pick": true
                      }
                    },
                    "published": {
                      "description": "Boolean value indicating whether the catalog item is published.",
                      "type": "boolean",
                      "example": true
                    },
                    "created": {
                      "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "description": "The ID of the catalog item variant in an external system.",
                  "type": "string",
                  "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                },
                "catalog_type": {
                  "description": "The type of catalog. Currently only \"$default\" is supported.",
                  "type": "string",
                  "example": "$default",
                  "default": "$default"
                },
                "integration_type": {
                  "description": "The integration type. Currently only \"$custom\" is supported.",
                  "type": "string",
                  "enum": [
                    "$custom"
                  ]
                },
                "title": {
                  "description": "The title of the catalog item variant.",
                  "type": "string",
                  "example": "Ocean Blue Shirt (Sample) Variant Medium"
                },
                "description": {
                  "description": "A description of the catalog item variant.",
                  "type": "string",
                  "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                },
                "sku": {
                  "description": "The SKU of the catalog item variant.",
                  "type": "string",
                  "example": "OBS-MD"
                },
                "inventory_policy": {
                  "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                  "type": "integer",
                  "example": 25,
                  "enum": [
                    0,
                    1,
                    2
                  ]
                },
                "inventory_quantity": {
                  "description": "The quantity of the catalog item variant currently in stock.",
                  "type": "number",
                  "example": 25
                },
                "price": {
                  "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                  "type": "number",
                  "example": 42
                },
                "url": {
                  "description": "URL pointing to the location of the catalog item variant on your website.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "image_full_url": {
                  "description": "URL pointing to the location of a full image of the catalog item variant.",
                  "type": "string",
                  "example": "https://via.placeholder.com/300"
                },
                "image_thumbnail_url": {
                  "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "images": {
                  "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://via.placeholder.com/150"
                  ]
                },
                "custom_metadata": {
                  "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                  "type": "object",
                  "example": {
                    "Top Pick": true
                  }
                },
                "published": {
                  "description": "Boolean value indicating whether the catalog item variant is published.",
                  "type": "boolean",
                  "example": true,
                  "default": true
                }
              },
              "required": [
                "external_id",
                "title",
                "description",
                "sku",
                "inventory_quantity",
                "price",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogVariantCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogVariantResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogVariantEnum"
                },
                "id": {
                  "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "description": "The ID of the catalog item variant in an external system.",
                      "type": "string",
                      "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                    },
                    "title": {
                      "description": "The title of the catalog item variant.",
                      "type": "string",
                      "example": "Ocean Blue Shirt (Sample) Variant Medium"
                    },
                    "description": {
                      "description": "A description of the catalog item variant.",
                      "type": "string",
                      "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                    },
                    "sku": {
                      "description": "The SKU of the catalog item variant.",
                      "type": "string",
                      "example": "OBS-MD"
                    },
                    "inventory_policy": {
                      "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                      "type": "integer",
                      "example": 2,
                      "enum": [
                        0,
                        1,
                        2
                      ]
                    },
                    "inventory_quantity": {
                      "description": "The quantity of the catalog item variant currently in stock.",
                      "type": "number",
                      "example": 25
                    },
                    "price": {
                      "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                      "type": "number",
                      "example": 42
                    },
                    "url": {
                      "description": "URL pointing to the location of the catalog item variant on your website.",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "image_full_url": {
                      "description": "URL pointing to the location of a full image of the catalog item variant.",
                      "type": "string",
                      "example": "https://via.placeholder.com/300"
                    },
                    "image_thumbnail_url": {
                      "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "images": {
                      "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "https://via.placeholder.com/150"
                      ]
                    },
                    "custom_metadata": {
                      "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                      "type": "object",
                      "example": {
                        "Top Pick": true
                      }
                    },
                    "published": {
                      "description": "Boolean value indicating whether the catalog item variant is published.",
                      "type": "boolean",
                      "example": true
                    },
                    "created": {
                      "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "description": "The ID of the catalog category in an external system.",
                  "type": "string",
                  "example": "SAMPLE-DATA-CATEGORY-APPAREL"
                },
                "name": {
                  "description": "The name of the catalog category.",
                  "type": "string",
                  "example": "Sample Data Category Apparel"
                },
                "integration_type": {
                  "description": "The integration type. Currently only \"$custom\" is supported.",
                  "type": "string",
                  "enum": [
                    "$custom"
                  ]
                },
                "catalog_type": {
                  "description": "The type of catalog. Currently only \"$default\" is supported.",
                  "type": "string",
                  "example": "$default",
                  "default": "$default"
                }
              },
              "required": [
                "external_id",
                "name"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogCategoryCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogCategoryResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "description": "The ID of the catalog category in an external system.",
                      "type": "string",
                      "example": "SAMPLE-DATA-CATEGORY-APPAREL"
                    },
                    "name": {
                      "description": "The name of the catalog category.",
                      "type": "string",
                      "example": "Sample Data Category Apparel"
                    },
                    "updated": {
                      "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryItemOp": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-item"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemCategoryOp": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "catalog-category"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "_MetricCreateQuery": {
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the event. Must be less than 128 characters.",
              "type": "string",
              "example": "Viewed Product"
            },
            "service": {
              "description": "This is for advanced usage. For api requests, this should use the default, which is set to api.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        },
        "EventCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/EventEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "profile": {
                  "description": "\nProperties of the profile that triggered this event. The profile must contain an\nidentifier. The $email and/or $phone_number can be used as the identify the profile.\nOther key value pairs can be used to create segments. For example, to create a list of\npeople on trial plans, include a profile's plan type in the profile. The profile\nsupports special fields. The fields include: $email (string), $first_name (string),\n$last_name (string), $phone_number (string), $city (string), $region (string; state or\nother region), $country (string), $zip (string), $image (string; url to a photo of a\nperson), and $consent (list of strings; eg: ['sms', 'email', 'web', 'directmail',\n'mobile']).\n",
                  "type": "object",
                  "example": {
                    "$email": "matt.kemp@klaviyo-demo.com"
                  }
                },
                "metric": {
                  "description": "The associated metric for the event. An account can have up to 200 unique metrics.",
                  "example": {
                    "name": "Viewed Product"
                  },
                  "$ref": "#/components/schemas/_MetricCreateQuery"
                },
                "properties": {
                  "description": "\n Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be references later. For example, HTML templates are\nuseful on a segment, but itself is not used in creating a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.\n",
                  "type": "object",
                  "example": {
                    "Brand": "Kids Book",
                    "Categories": [
                      "Fiction",
                      "Children"
                    ],
                    "ProductID": 1111,
                    "ProductName": "Winnie the Pooh",
                    "$extra": {
                      "URL": "http://www.example.com/path/to/product",
                      "ImageURL": "http://www.example.com/path/to/product/image.png"
                    }
                  }
                },
                "time": {
                  "description": "\nWhen this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.\n",
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-11-08T00:00:00"
                },
                "value": {
                  "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase.",
                  "type": "number",
                  "example": 9.99
                },
                "unique_id": {
                  "description": "\nA unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.\n",
                  "type": "string"
                }
              },
              "required": [
                "profile",
                "metric",
                "properties"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "EventCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/EventCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "MetricAggregateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/MetricAggregateEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "metric_id": {
                  "description": "The metric ID used in the aggregation.",
                  "type": "string",
                  "example": "0rG4eQ"
                },
                "page_cursor": {
                  "description": "Optional pagination cursor to iterate over large result sets",
                  "type": "string"
                },
                "measurements": {
                  "description": "Measurement key, e.g. `unique`, `sum_value`, `count`",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "count",
                      "sum_value",
                      "unique"
                    ],
                    "description": "Supported measurements for aggregation"
                  },
                  "example": "count"
                },
                "interval": {
                  "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                  "type": "string",
                  "example": "day",
                  "enum": [
                    "day",
                    "hour",
                    "month",
                    "week"
                  ]
                },
                "page_size": {
                  "description": "Alter the maximum number of returned rows in a single page of aggregation results",
                  "type": "integer",
                  "example": 500,
                  "default": 500
                },
                "by": {
                  "description": "Optional attribute(s) used for partitioning by the aggregation function",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "$attributed_channel",
                      "$attributed_flow",
                      "$attributed_message",
                      "$attributed_variation",
                      "$campaign_channel",
                      "$flow",
                      "$flow_channel",
                      "$message",
                      "$message_send_cohort",
                      "$variation",
                      "$variation_send_cohort",
                      "Bounce Type",
                      "Campaign Name",
                      "Client Canonical",
                      "Client Name",
                      "Client Type",
                      "Email Domain",
                      "Failure Source",
                      "Failure Type",
                      "From Number",
                      "From Phone Region",
                      "List",
                      "Message Name",
                      "Message Type",
                      "Method",
                      "Subject",
                      "To Number",
                      "To Phone Region",
                      "URL",
                      "form_id"
                    ],
                    "description": "Supported dimensions for grouping and filtering"
                  },
                  "example": "$message"
                },
                "return_fields": {
                  "description": "Provide fields to limit the returned data",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filter": {
                  "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "greater-or-equal(datetime,2022-12-01T00:00:00)",
                    "less-than(datetime,2022-12-08T00:00:00"
                  ]
                },
                "timezone": {
                  "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive.",
                  "type": "string",
                  "example": "America/New_York",
                  "default": "UTC"
                },
                "sort": {
                  "description": "Provide a sort key (e.g. -$message)",
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "-$attributed_channel",
                    "$attributed_flow",
                    "-$attributed_flow",
                    "$attributed_message",
                    "-$attributed_message",
                    "$attributed_variation",
                    "-$attributed_variation",
                    "$campaign_channel",
                    "-$campaign_channel",
                    "$flow",
                    "-$flow",
                    "$flow_channel",
                    "-$flow_channel",
                    "$message",
                    "-$message",
                    "$message_send_cohort",
                    "-$message_send_cohort",
                    "$variation",
                    "-$variation",
                    "$variation_send_cohort",
                    "-$variation_send_cohort",
                    "Bounce Type",
                    "-Bounce Type",
                    "Campaign Name",
                    "-Campaign Name",
                    "Client Canonical",
                    "-Client Canonical",
                    "Client Name",
                    "-Client Name",
                    "Client Type",
                    "-Client Type",
                    "Email Domain",
                    "-Email Domain",
                    "Failure Source",
                    "-Failure Source",
                    "Failure Type",
                    "-Failure Type",
                    "From Number",
                    "-From Number",
                    "From Phone Region",
                    "-From Phone Region",
                    "List",
                    "-List",
                    "Message Name",
                    "-Message Name",
                    "Message Type",
                    "-Message Type",
                    "Method",
                    "-Method",
                    "Subject",
                    "-Subject",
                    "To Number",
                    "-To Number",
                    "To Phone Region",
                    "-To Phone Region",
                    "URL",
                    "-URL",
                    "count",
                    "-count",
                    "form_id",
                    "-form_id",
                    "sum_value",
                    "-sum_value",
                    "unique",
                    "-unique"
                  ]
                }
              },
              "required": [
                "metric_id",
                "measurements",
                "interval",
                "filter"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "MetricAggregateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/MetricAggregateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "MetricAggregateRowDTO": {
          "type": "object",
          "properties": {
            "dimensions": {
              "description": "List of dimensions associated with this set of measurements",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "measurements": {
              "description": "Dictionary of measurement_key, values",
              "type": "object"
            }
          },
          "required": [
            "dimensions",
            "measurements"
          ]
        },
        "PostMetricAggregateResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/MetricAggregateEnum"
                },
                "id": {
                  "description": "Ephemeral ID associated with the aggregation query",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "dates": {
                      "description": "The dates of the query range",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "data": {
                      "description": "Aggregation result data",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetricAggregateRowDTO"
                      }
                    }
                  },
                  "required": [
                    "dates",
                    "data"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "ListCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ListEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A helpful name to label the list",
                  "type": "string",
                  "example": "Newsletter"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "ListCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ListCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                  "type": "string",
                  "example": "Y6nRLr"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A helpful name to label the list",
                      "type": "string",
                      "example": "Newsletter"
                    },
                    "created": {
                      "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "profiles": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "profile"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "ListMembersAddQuery": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "ProfileCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "Individual's email address",
                  "type": "string",
                  "example": "sarah.mason@klaviyo-demo.com"
                },
                "phone_number": {
                  "description": "Individual's phone number in E.164 format",
                  "type": "string",
                  "example": "+15005550006"
                },
                "external_id": {
                  "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                  "type": "string",
                  "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                },
                "first_name": {
                  "description": "Individual's first name",
                  "type": "string",
                  "example": "Sarah"
                },
                "last_name": {
                  "description": "Individual's last name",
                  "type": "string",
                  "example": "Mason"
                },
                "organization": {
                  "description": "Name of the company or organization within the company for whom the individual works",
                  "type": "string",
                  "example": "Klaviyo"
                },
                "title": {
                  "description": "Individual's job title",
                  "type": "string",
                  "example": "Engineer"
                },
                "image": {
                  "description": "URL pointing to the location of a profile image",
                  "type": "string",
                  "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                  "type": "object",
                  "example": {
                    "pseudonym": "Dr. Octopus"
                  }
                }
              }
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "ProfileCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfileCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostProfileResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
                  "type": "string",
                  "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "description": "Individual's email address",
                      "type": "string",
                      "example": "sarah.mason@klaviyo-demo.com"
                    },
                    "phone_number": {
                      "description": "Individual's phone number in E.164 format",
                      "type": "string",
                      "example": "+15005550006"
                    },
                    "external_id": {
                      "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                      "type": "string",
                      "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                    },
                    "first_name": {
                      "description": "Individual's first name",
                      "type": "string",
                      "example": "Sarah"
                    },
                    "last_name": {
                      "description": "Individual's last name",
                      "type": "string",
                      "example": "Mason"
                    },
                    "organization": {
                      "description": "Name of the company or organization within the company for whom the individual works",
                      "type": "string",
                      "example": "Klaviyo"
                    },
                    "title": {
                      "description": "Individual's job title",
                      "type": "string",
                      "example": "Engineer"
                    },
                    "image": {
                      "description": "URL pointing to the location of a profile image",
                      "type": "string",
                      "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                    },
                    "created": {
                      "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "last_event_date": {
                      "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "location": {
                      "$ref": "#/components/schemas/ProfileLocation"
                    },
                    "properties": {
                      "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                      "type": "object",
                      "example": {
                        "pseudonym": "Dr. Octopus"
                      }
                    },
                    "subscriptions": {
                      "$ref": "#/components/schemas/Subscriptions"
                    },
                    "predictive_analytics": {
                      "$ref": "#/components/schemas/PredictiveAnalytics"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "list"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "segments": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The campaign name",
                  "type": "string",
                  "example": "My new campaign"
                },
                "channel": {
                  "description": "The type of campaign (email or sms, for example)",
                  "type": "string",
                  "example": "email"
                },
                "audiences": {
                  "description": "The audiences to be included and/or excluded from the campaign",
                  "$ref": "#/components/schemas/AudiencesSubObject"
                },
                "send_strategy": {
                  "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy.",
                  "$ref": "#/components/schemas/SendStrategySubObject"
                },
                "send_options": {
                  "description": "Options to use when sending a campaign",
                  "$ref": "#/components/schemas/SendOptionsSubObject"
                },
                "tracking_options": {
                  "description": "The tracking options associated with the campaign",
                  "$ref": "#/components/schemas/TrackingOptionsSubObject"
                }
              },
              "required": [
                "name",
                "channel",
                "audiences",
                "send_strategy",
                "send_options"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CampaignCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCampaignResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "description": "The campaign ID",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The campaign name",
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the campaign",
                      "type": "string"
                    },
                    "archived": {
                      "description": "Whether the campaign has been archived or not",
                      "type": "boolean"
                    },
                    "channel": {
                      "description": "The type of campaign",
                      "type": "string"
                    },
                    "audiences": {
                      "description": "The audiences to be included and/or excluded from the campaign",
                      "$ref": "#/components/schemas/AudiencesSubObject"
                    },
                    "send_options": {
                      "description": "Options to use when sending a campaign",
                      "$ref": "#/components/schemas/SendOptionsSubObject"
                    },
                    "message": {
                      "description": "The id of the message associated with the campaign",
                      "type": "string"
                    },
                    "tracking_options": {
                      "description": "The tracking options associated with the campaign",
                      "$ref": "#/components/schemas/TrackingOptionsSubObject"
                    },
                    "send_strategy": {
                      "description": "The send strategy the campaign will send with",
                      "$ref": "#/components/schemas/SendStrategySubObject"
                    },
                    "created_at": {
                      "description": "The datetime when the campaign was created",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "scheduled_at": {
                      "description": "The datetime when the campaign was scheduled for future sending",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated_at": {
                      "description": "The datetime when the campaign was last updated by a user or the system",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "send_time": {
                      "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  },
                  "required": [
                    "name",
                    "status",
                    "archived",
                    "channel",
                    "audiences",
                    "send_options",
                    "message",
                    "tracking_options",
                    "send_strategy",
                    "created_at",
                    "scheduled_at",
                    "updated_at",
                    "send_time"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignCloneQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The campaign ID to be cloned",
                  "type": "string"
                },
                "new_name": {
                  "description": "The name for the new cloned campaign",
                  "type": "string",
                  "example": "My cloned campaign's new name"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CampaignCloneQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignCloneQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignMessageAssignTemplateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignMessageEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The message ID to be assigned to",
                  "type": "string"
                },
                "template_id": {
                  "description": "The template ID to assign",
                  "type": "string",
                  "example": "RipRmi"
                }
              },
              "required": [
                "id",
                "template_id"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CampaignMessageAssignTemplateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCampaignMessageResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignMessageEnum"
                },
                "id": {
                  "description": "The message ID",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "description": "The label or name on the message",
                      "type": "string"
                    },
                    "channel": {
                      "description": "The channel the message is to be sent on",
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/ContentSubObject",
                      "description": "Additional attributes relating to the content of the message"
                    },
                    "send_times": {
                      "description": "The list of appropriate Send Time Sub-objects associated with the message",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SendTimeSubObject"
                      }
                    },
                    "created_at": {
                      "description": "The datetime when the message was created",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated_at": {
                      "description": "The datetime when the message was last updated",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "campaign_id": {
                      "description": "The parent campaign id",
                      "type": "string"
                    }
                  },
                  "required": [
                    "label",
                    "channel",
                    "content",
                    "campaign_id"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignSendJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignSendJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of the campaign to send",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CampaignSendJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignSendJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCampaignSendJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignSendJobEnum"
                },
                "id": {
                  "description": "The ID of the campaign to send",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the send job",
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    }
                  },
                  "required": [
                    "status"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignRecipientEstimationJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of the campaign to perform recipient estimation",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CampaignRecipientEstimationJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCampaignRecipientEstimationJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
                },
                "id": {
                  "description": "The ID of the campaign used for estimating recipients",
                  "type": "string",
                  "example": "01GMRWDSA0ARTAKE1SFX8JGXAY"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the recipient estimation job",
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    }
                  },
                  "required": [
                    "status"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TemplateCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TemplateEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the template",
                  "type": "string",
                  "example": "Monthly Newsletter Template"
                },
                "editor_type": {
                  "description": "Restricted to CODE",
                  "type": "string"
                },
                "html": {
                  "description": "The HTML contents of the template",
                  "type": "string",
                  "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        "
                },
                "text": {
                  "description": "The plaintext version of the template",
                  "type": "string",
                  "example": "hello world"
                },
                "return_fields": {
                  "description": "Provide fields to limit the returned data",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "editor_type"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "TemplateCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostTemplateResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TemplateEnum"
                },
                "id": {
                  "description": "The ID of template",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "description": "The ID of the company the template belongs to",
                      "type": "string",
                      "example": "COMPANY_ID"
                    },
                    "name": {
                      "description": "The name of the template",
                      "type": "string"
                    },
                    "editor_type": {
                      "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n",
                      "type": "string"
                    },
                    "html": {
                      "description": "The rendered HTML of the template",
                      "type": "string"
                    },
                    "text": {
                      "description": "The template plain_text",
                      "type": "string"
                    },
                    "created": {
                      "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TemplateRenderQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TemplateEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of template",
                  "type": "string"
                },
                "context": {
                  "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/115005084927-Template-tags-and-variable-syntax-reference-classic-editor-) for more details.",
                  "type": "object",
                  "example": {
                    "first_name": "Jane",
                    "last_name": "Smith"
                  }
                },
                "return_fields": {
                  "description": "Provide fields to limit the returned data",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "context"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "TemplateRenderQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateRenderQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "TemplateCloneQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TemplateEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of template to be cloned",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the template",
                  "type": "string",
                  "example": "Clone of Monthly Newsletter Template"
                },
                "return_fields": {
                  "description": "Any subset of TemplateResponse fields",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "TemplateCloneQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateCloneQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemCreateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "description": "Array of catalog items to create.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogItemCreateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogItemCreateJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemUpdateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "description": "Array of catalog items to update.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogItemUpdateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogItemUpdateJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemDeleteJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "description": "Array of catalog items to delete.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemDeleteQueryResourceObject"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogItemDeleteJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogItemDeleteJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantCreateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "description": "Array of catalog variants to create.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogVariantCreateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogVariantCreateJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantUpdateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "description": "Array of catalog variants to update.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogVariantUpdateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogVariantUpdateJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantDeleteJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "description": "Array of catalog variants to delete.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantDeleteQueryResourceObject"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogVariantDeleteJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogVariantDeleteJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryCreateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "description": "Array of catalog categories to create.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogCategoryCreateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogCategoryCreateJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryUpdateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "description": "Array of catalog categories to update.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogCategoryUpdateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogCategoryUpdateJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryDeleteJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "description": "Array of catalog categories to delete.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryDeleteQueryResourceObject"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "CatalogCategoryDeleteJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostCatalogCategoryDeleteJobResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the asynchronous job.",
                      "type": "string",
                      "example": "processing",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ]
                    },
                    "created_at": {
                      "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "total_count": {
                      "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                      "type": "integer",
                      "example": 10
                    },
                    "completed_count": {
                      "description": "The total number of operations that have been completed by the job.",
                      "type": "integer",
                      "example": 9
                    },
                    "failed_count": {
                      "description": "The total number of operations that have failed as part of the job.",
                      "type": "integer",
                      "example": 1
                    },
                    "completed_at": {
                      "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "description": "Array of errors encountered during the processing of the job.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TagCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag name",
                  "type": "string",
                  "example": "My Tag"
                },
                "tag_group_id": {
                  "description": "The ID of the Tag Group to associate the Tag with. If this field is not specified, the Tag will be associated with the company's Default Tag Group.",
                  "type": "string",
                  "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "TagCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostTagResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "description": "The Tag ID",
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The Tag name",
                      "type": "string",
                      "example": "My Tag"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tag-group": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag-group"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "lists": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "list"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "segments": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "campaigns": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "campaign"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "flows": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TagGroupCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagGroupEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag Group name",
                  "type": "string",
                  "example": "My Tag Group"
                },
                "exclusive": {
                  "type": "boolean"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "TagGroupCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagGroupCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PostTagGroupResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagGroupEnum"
                },
                "id": {
                  "description": "The Tag Group ID",
                  "type": "string",
                  "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The Tag Group name",
                      "type": "string",
                      "example": "My Tag Group"
                    },
                    "exclusive": {
                      "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                      "type": "boolean"
                    },
                    "default": {
                      "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TagFlowOp": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "flow"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "TagCampaignOp": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "campaign"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "TagListOp": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "list"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "TagSegmentOp": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "segment"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "Suppression": {
          "type": "object",
          "properties": {
            "email": {
              "description": "The email of the profile to suppress / unsuppress.",
              "type": "string",
              "example": "matt-kemp@klaviyo-demo.com"
            }
          },
          "required": [
            "email"
          ]
        },
        "SuppressionCreateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileSuppressionBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "suppressions": {
                  "description": "One or more suppressions to be created.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suppression"
                  }
                }
              },
              "required": [
                "suppressions"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "SuppressionCreateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "UnsuppressionCreateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileUnsuppressionBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "suppressions": {
                  "description": "One or more suppressions to be removed.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suppression"
                  }
                }
              },
              "required": [
                "suppressions"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "UnsuppressionCreateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "SubscriptionChannels": {
          "type": "object",
          "properties": {
            "email": {
              "description": "The communication types to subscribe to on the \"EMAIL\" Channel. Currently supports \"MARKETING\".",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MARKETING"
                ],
                "description": "The communication types supported by email subscriptions."
              },
              "example": [
                "MARKETING"
              ]
            },
            "sms": {
              "description": "The communication types to subscribe to on the \"SMS\" Channel. Currently supports \"MARKETING\".",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MARKETING"
                ],
                "description": "The communication types supported by SMS subscriptions."
              },
              "example": [
                "MARKETING"
              ]
            }
          }
        },
        "Subscription": {
          "type": "object",
          "properties": {
            "channels": {
              "description": "When provided, this will provide consent for the indicated message types on the specified channels. If omitted, we will subscribe the profile to all message types on the channels corresponding to the provided identifiers.",
              "$ref": "#/components/schemas/SubscriptionChannels"
            },
            "email": {
              "description": "The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.",
              "type": "string",
              "example": "matt-kemp@klaviyo-demo.com"
            },
            "phone_number": {
              "description": "The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted.",
              "type": "string",
              "example": "+15005550006"
            },
            "profile_id": {
              "description": "The ID of the profile to subscribe. If provided, this will be used to perform the lookup.",
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
            }
          }
        },
        "SubscriptionCreateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileSubscriptionBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "description": "The list to add the newly subscribed profiles to",
                  "type": "string",
                  "example": "Y6nRLr"
                },
                "custom_source": {
                  "description": "A custom method detail or source to store on the consent records.",
                  "type": "string",
                  "example": "Marketing Event"
                },
                "subscriptions": {
                  "description": "One or more subscriptions to be created.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              },
              "required": [
                "list_id",
                "subscriptions"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "SubscriptionCreateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "UnsubscriptionCreateJobCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileUnsubscriptionBulkCreateJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "description": "Optional, the list to remove the profiles from",
                  "type": "string",
                  "example": "Y6nRLr"
                },
                "emails": {
                  "description": "The emails to unsubscribe if any.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": "[\"matt-kemp@klaviyo-demo.com\", \"sarah.mason@klaviyo-demo.com\""
                },
                "phone_numbers": {
                  "description": "The phone numbers to unsubscribe if any.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": "[\"+15005550006\",\"+15005550007\"]"
                }
              }
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "UnsubscriptionCreateJobCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "DataPrivacyCreateDeletionJobQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/DataPrivacyDeletionJobEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "profile_id": {
                  "description": "The ID of the profile to delete. This is the `id` field on the profile object.",
                  "type": "string",
                  "example": "01F2VWQ645BES947MP1BPAKVMB"
                },
                "email": {
                  "description": "The email address of the profile to delete.",
                  "type": "string",
                  "example": "matt.kemp@klaviyo-demo.com"
                },
                "phone_number": {
                  "description": "The phone number of the profile to delete.",
                  "type": "string",
                  "example": "+15005550006"
                }
              }
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "DataPrivacyCreateDeletionJobQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "OnsiteSubscriptionCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/SubscriptionEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "description": "The list ID to add the newly subscribed profile to.",
                  "type": "string",
                  "example": "Y6nRLr"
                },
                "custom_source": {
                  "description": "A custom method detail or source to store on the consent records for this subscription.",
                  "type": "string",
                  "example": "Homepage footer signup form"
                },
                "email": {
                  "description": "Email address to create subscription and email consent record for.",
                  "type": "string",
                  "example": "matt.kemp@klaviyo-demo.com"
                },
                "phone_number": {
                  "description": "Phone number to create subscription and SMS consent record for, in E.164 format.",
                  "type": "string",
                  "example": "+15005550006"
                },
                "properties": {
                  "description": "Profile properties to set on the newly subscribed profile.",
                  "type": "object",
                  "example": {
                    "first_name": "Matt",
                    "last_name": "Kemp",
                    "favorite_color": "Blue"
                  }
                }
              },
              "required": [
                "list_id"
              ]
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "OnsiteSubscriptionCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "_OnsiteProfileMetaIdentifiers": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
            },
            "email": {
              "description": "Individual's email address",
              "type": "string",
              "example": "sarah.mason@klaviyo-demo.com"
            },
            "phone_number": {
              "description": "Individual's phone number in E.164 format",
              "type": "string",
              "example": "+15005550006"
            },
            "external_id": {
              "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
              "type": "string",
              "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
            },
            "anonymous_id": {
              "type": "string"
            },
            "_kx": {
              "description": "\nAlso known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.\n",
              "type": "string",
              "example": "J8fjcn003Wy6b-3ILNlOyZXabW6dcFwTyeuxrowMers%3D.McN66"
            }
          }
        },
        "_OnsiteProfileMeta": {
          "type": "object",
          "properties": {
            "identifiers": {
              "$ref": "#/components/schemas/_OnsiteProfileMetaIdentifiers"
            }
          },
          "required": [
            "identifiers"
          ]
        },
        "OnsiteProfileCreateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileEnum"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "Individual's email address",
                  "type": "string",
                  "example": "sarah.mason@klaviyo-demo.com"
                },
                "phone_number": {
                  "description": "Individual's phone number in E.164 format",
                  "type": "string",
                  "example": "+15005550006"
                },
                "external_id": {
                  "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                  "type": "string",
                  "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "description": "Individual's first name",
                  "type": "string",
                  "example": "Sarah"
                },
                "last_name": {
                  "description": "Individual's last name",
                  "type": "string",
                  "example": "Mason"
                },
                "organization": {
                  "description": "Name of the company or organization within the company for whom the individual works",
                  "type": "string",
                  "example": "Klaviyo"
                },
                "title": {
                  "description": "Individual's job title",
                  "type": "string",
                  "example": "Engineer"
                },
                "image": {
                  "description": "URL pointing to the location of a profile image",
                  "type": "string",
                  "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                  "type": "object",
                  "example": {
                    "pseudonym": "Dr. Octopus"
                  }
                }
              }
            },
            "meta": {
              "$ref": "#/components/schemas/_OnsiteProfileMeta"
            }
          },
          "required": [
            "type",
            "attributes"
          ]
        },
        "OnsiteProfileCreateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemEnum"
            },
            "id": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "description": "The title of the catalog item.",
                  "type": "string",
                  "example": "Ocean Blue Shirt (Sample)"
                },
                "price": {
                  "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                  "type": "number",
                  "example": 42
                },
                "description": {
                  "description": "A description of the catalog item.",
                  "type": "string",
                  "example": "A description of the catalog item."
                },
                "url": {
                  "description": "URL pointing to the location of the catalog item on your website.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "image_full_url": {
                  "description": "URL pointing to the location of a full image of the catalog item.",
                  "type": "string",
                  "example": "https://via.placeholder.com/300"
                },
                "image_thumbnail_url": {
                  "description": "URL pointing to the location of an image thumbnail of the catalog item",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "images": {
                  "description": "List of URLs pointing to the locations of images of the catalog item.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://via.placeholder.com/150"
                  ]
                },
                "custom_metadata": {
                  "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                  "type": "object",
                  "example": {
                    "Top Pick": true
                  }
                },
                "published": {
                  "description": "Boolean value indicating whether the catalog item is published.",
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-category"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "CatalogItemUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchCatalogItemResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "description": "The ID of the catalog item in an external system.",
                      "type": "string",
                      "example": "SAMPLE-DATA-ITEM-1"
                    },
                    "title": {
                      "description": "The title of the catalog item.",
                      "type": "string",
                      "example": "Ocean Blue Shirt (Sample)"
                    },
                    "description": {
                      "description": "A description of the catalog item.",
                      "type": "string",
                      "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                    },
                    "price": {
                      "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                      "type": "number",
                      "example": 42
                    },
                    "url": {
                      "description": "URL pointing to the location of the catalog item on your website.",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "image_full_url": {
                      "description": "URL pointing to the location of a full image of the catalog item.",
                      "type": "string",
                      "example": "https://via.placeholder.com/300"
                    },
                    "image_thumbnail_url": {
                      "description": "URL pointing to the location of an image thumbnail of the catalog item",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "images": {
                      "description": "List of URLs pointing to the locations of images of the catalog item.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "https://via.placeholder.com/150"
                      ]
                    },
                    "custom_metadata": {
                      "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                      "type": "object",
                      "example": {
                        "Top Pick": true
                      }
                    },
                    "published": {
                      "description": "Boolean value indicating whether the catalog item is published.",
                      "type": "boolean",
                      "example": true
                    },
                    "created": {
                      "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogVariantUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantEnum"
            },
            "id": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "description": "The title of the catalog item variant.",
                  "type": "string",
                  "example": "Ocean Blue Shirt (Sample) Variant Medium"
                },
                "description": {
                  "description": "A description of the catalog item variant.",
                  "type": "string",
                  "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                },
                "sku": {
                  "description": "The SKU of the catalog item variant.",
                  "type": "string",
                  "example": "OBS-MD"
                },
                "inventory_policy": {
                  "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                  "type": "integer",
                  "example": 2,
                  "enum": [
                    0,
                    1,
                    2
                  ]
                },
                "inventory_quantity": {
                  "description": "The quantity of the catalog item variant currently in stock.",
                  "type": "number",
                  "example": 25
                },
                "price": {
                  "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                  "type": "number",
                  "example": 42
                },
                "url": {
                  "description": "URL pointing to the location of the catalog item variant on your website.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "image_full_url": {
                  "description": "URL pointing to the location of a full image of the catalog item variant.",
                  "type": "string",
                  "example": "https://via.placeholder.com/300"
                },
                "image_thumbnail_url": {
                  "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                  "type": "string",
                  "example": "https://via.placeholder.com/150"
                },
                "images": {
                  "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://via.placeholder.com/150"
                  ]
                },
                "custom_metadata": {
                  "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                  "type": "object",
                  "example": {
                    "Top Pick": true
                  }
                },
                "published": {
                  "description": "Boolean value indicating whether the catalog item variant is published.",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "CatalogVariantUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchCatalogVariantResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogVariantEnum"
                },
                "id": {
                  "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "description": "The ID of the catalog item variant in an external system.",
                      "type": "string",
                      "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                    },
                    "title": {
                      "description": "The title of the catalog item variant.",
                      "type": "string",
                      "example": "Ocean Blue Shirt (Sample) Variant Medium"
                    },
                    "description": {
                      "description": "A description of the catalog item variant.",
                      "type": "string",
                      "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                    },
                    "sku": {
                      "description": "The SKU of the catalog item variant.",
                      "type": "string",
                      "example": "OBS-MD"
                    },
                    "inventory_policy": {
                      "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                      "type": "integer",
                      "example": 2,
                      "enum": [
                        0,
                        1,
                        2
                      ]
                    },
                    "inventory_quantity": {
                      "description": "The quantity of the catalog item variant currently in stock.",
                      "type": "number",
                      "example": 25
                    },
                    "price": {
                      "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                      "type": "number",
                      "example": 42
                    },
                    "url": {
                      "description": "URL pointing to the location of the catalog item variant on your website.",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "image_full_url": {
                      "description": "URL pointing to the location of a full image of the catalog item variant.",
                      "type": "string",
                      "example": "https://via.placeholder.com/300"
                    },
                    "image_thumbnail_url": {
                      "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                      "type": "string",
                      "example": "https://via.placeholder.com/150"
                    },
                    "images": {
                      "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "https://via.placeholder.com/150"
                      ]
                    },
                    "custom_metadata": {
                      "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                      "type": "object",
                      "example": {
                        "Top Pick": true
                      }
                    },
                    "published": {
                      "description": "Boolean value indicating whether the catalog item variant is published.",
                      "type": "boolean",
                      "example": true
                    },
                    "created": {
                      "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogCategoryUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryEnum"
            },
            "id": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the catalog category.",
                  "type": "string",
                  "example": "Sample Data Category Apparel"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "CatalogCategoryUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchCatalogCategoryResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "description": "The ID of the catalog category in an external system.",
                      "type": "string",
                      "example": "SAMPLE-DATA-CATEGORY-APPAREL"
                    },
                    "name": {
                      "description": "The name of the catalog category.",
                      "type": "string",
                      "example": "Sample Data Category Apparel"
                    },
                    "updated": {
                      "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "ListPartialUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ListEnum"
            },
            "id": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A helpful name to label the list",
                  "type": "string",
                  "example": "Newsletter"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "ListPartialUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ListPartialUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchListResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                  "type": "string",
                  "example": "Y6nRLr"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A helpful name to label the list",
                      "type": "string",
                      "example": "Newsletter"
                    },
                    "created": {
                      "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "profiles": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "profile"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "SegmentPartialUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/SegmentEnum"
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "SegmentPartialUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SegmentPartialUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchSegmentResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "A helpful name to label the segment ",
                      "type": "string",
                      "example": "Repeat Purchasers"
                    },
                    "created": {
                      "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "profiles": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "profile"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "ProfilePartialUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ProfileEnum"
            },
            "id": {
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "Individual's email address",
                  "type": "string",
                  "example": "sarah.mason@klaviyo-demo.com"
                },
                "phone_number": {
                  "description": "Individual's phone number in E.164 format",
                  "type": "string",
                  "example": "+15005550006"
                },
                "external_id": {
                  "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                  "type": "string",
                  "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "description": "Individual's first name",
                  "type": "string",
                  "example": "Sarah"
                },
                "last_name": {
                  "description": "Individual's last name",
                  "type": "string",
                  "example": "Mason"
                },
                "organization": {
                  "description": "Name of the company or organization within the company for whom the individual works",
                  "type": "string",
                  "example": "Klaviyo"
                },
                "title": {
                  "description": "Individual's job title",
                  "type": "string",
                  "example": "Engineer"
                },
                "image": {
                  "description": "URL pointing to the location of a profile image",
                  "type": "string",
                  "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                  "type": "object",
                  "example": {
                    "pseudonym": "Dr. Octopus"
                  }
                }
              }
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "ProfilePartialUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfilePartialUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchProfileResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
                  "type": "string",
                  "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "description": "Individual's email address",
                      "type": "string",
                      "example": "sarah.mason@klaviyo-demo.com"
                    },
                    "phone_number": {
                      "description": "Individual's phone number in E.164 format",
                      "type": "string",
                      "example": "+15005550006"
                    },
                    "external_id": {
                      "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                      "type": "string",
                      "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                    },
                    "first_name": {
                      "description": "Individual's first name",
                      "type": "string",
                      "example": "Sarah"
                    },
                    "last_name": {
                      "description": "Individual's last name",
                      "type": "string",
                      "example": "Mason"
                    },
                    "organization": {
                      "description": "Name of the company or organization within the company for whom the individual works",
                      "type": "string",
                      "example": "Klaviyo"
                    },
                    "title": {
                      "description": "Individual's job title",
                      "type": "string",
                      "example": "Engineer"
                    },
                    "image": {
                      "description": "URL pointing to the location of a profile image",
                      "type": "string",
                      "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                    },
                    "created": {
                      "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "last_event_date": {
                      "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "location": {
                      "$ref": "#/components/schemas/ProfileLocation"
                    },
                    "properties": {
                      "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                      "type": "object",
                      "example": {
                        "pseudonym": "Dr. Octopus"
                      }
                    },
                    "subscriptions": {
                      "$ref": "#/components/schemas/Subscriptions"
                    },
                    "predictive_analytics": {
                      "$ref": "#/components/schemas/PredictiveAnalytics"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "list"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "segments": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "FlowUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/FlowEnum"
            },
            "id": {
              "description": "ID of the Flow to update. Ex: XVTP5Q",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status you want to update the flow to. ['draft', 'manual', or 'live']",
                  "type": "string"
                }
              },
              "required": [
                "status"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "FlowUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/FlowUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchFlowResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "trigger_type": {
                      "type": "string"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "flow-actions": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow-action"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignPartialUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignEnum"
            },
            "id": {
              "description": "The campaign ID to be retrieved",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The campaign name",
                  "type": "string",
                  "example": "My new campaign"
                },
                "audiences": {
                  "description": "The audiences to be included and/or excluded from the campaign",
                  "$ref": "#/components/schemas/AudiencesSubObject"
                },
                "send_options": {
                  "description": "Options to use when sending a campaign",
                  "$ref": "#/components/schemas/SendOptionsSubObject"
                },
                "tracking_options": {
                  "description": "The tracking options associated with the campaign",
                  "$ref": "#/components/schemas/TrackingOptionsSubObject"
                },
                "send_strategy": {
                  "description": "The send strategy the campaign will send with",
                  "$ref": "#/components/schemas/SendStrategySubObject"
                }
              }
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "CampaignPartialUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignPartialUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchCampaignResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "description": "The campaign ID",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The campaign name",
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the campaign",
                      "type": "string"
                    },
                    "archived": {
                      "description": "Whether the campaign has been archived or not",
                      "type": "boolean"
                    },
                    "channel": {
                      "description": "The type of campaign",
                      "type": "string"
                    },
                    "audiences": {
                      "description": "The audiences to be included and/or excluded from the campaign",
                      "$ref": "#/components/schemas/AudiencesSubObject"
                    },
                    "send_options": {
                      "description": "Options to use when sending a campaign",
                      "$ref": "#/components/schemas/SendOptionsSubObject"
                    },
                    "message": {
                      "description": "The id of the message associated with the campaign",
                      "type": "string"
                    },
                    "tracking_options": {
                      "description": "The tracking options associated with the campaign",
                      "$ref": "#/components/schemas/TrackingOptionsSubObject"
                    },
                    "send_strategy": {
                      "description": "The send strategy the campaign will send with",
                      "$ref": "#/components/schemas/SendStrategySubObject"
                    },
                    "created_at": {
                      "description": "The datetime when the campaign was created",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "scheduled_at": {
                      "description": "The datetime when the campaign was scheduled for future sending",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated_at": {
                      "description": "The datetime when the campaign was last updated by a user or the system",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "send_time": {
                      "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  },
                  "required": [
                    "name",
                    "status",
                    "archived",
                    "channel",
                    "audiences",
                    "send_options",
                    "message",
                    "tracking_options",
                    "send_strategy",
                    "created_at",
                    "scheduled_at",
                    "updated_at",
                    "send_time"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignMessagePartialUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignMessageEnum"
            },
            "id": {
              "description": "The message ID to be retrieved",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "label": {
                  "description": "The label or name on the message",
                  "type": "string",
                  "example": "My message name"
                },
                "content": {
                  "$ref": "#/components/schemas/ContentSubObject",
                  "description": "Additional attributes relating to the content of the message"
                }
              }
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "CampaignMessagePartialUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchCampaignMessageResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignMessageEnum"
                },
                "id": {
                  "description": "The message ID",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "description": "The label or name on the message",
                      "type": "string"
                    },
                    "channel": {
                      "description": "The channel the message is to be sent on",
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/ContentSubObject",
                      "description": "Additional attributes relating to the content of the message"
                    },
                    "send_times": {
                      "description": "The list of appropriate Send Time Sub-objects associated with the message",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SendTimeSubObject"
                      }
                    },
                    "created_at": {
                      "description": "The datetime when the message was created",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated_at": {
                      "description": "The datetime when the message was last updated",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "campaign_id": {
                      "description": "The parent campaign id",
                      "type": "string"
                    }
                  },
                  "required": [
                    "label",
                    "channel",
                    "content",
                    "campaign_id"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CampaignSendJobPartialUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CampaignSendJobEnum"
            },
            "id": {
              "description": "The ID of the currently sending campaign to cancel or revert",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "action": {
                  "description": "The action you would like to take with this send job from among 'cancel' and 'revert'",
                  "type": "string",
                  "example": "cancel"
                }
              },
              "required": [
                "action"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "CampaignSendJobPartialUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "TemplateUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TemplateEnum"
            },
            "id": {
              "description": "The ID of template",
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the template",
                  "type": "string",
                  "example": "Monthly Newsletter Template"
                },
                "html": {
                  "description": "The HTML of the template",
                  "type": "string",
                  "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          "
                },
                "text": {
                  "description": "The plaintext of the template",
                  "type": "string",
                  "example": "hello world"
                },
                "return_fields": {
                  "description": "Provide fields to limit the returned data",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "TemplateUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchTemplateResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TemplateEnum"
                },
                "id": {
                  "description": "The ID of template",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "description": "The ID of the company the template belongs to",
                      "type": "string",
                      "example": "COMPANY_ID"
                    },
                    "name": {
                      "description": "The name of the template",
                      "type": "string"
                    },
                    "editor_type": {
                      "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n",
                      "type": "string"
                    },
                    "html": {
                      "description": "The rendered HTML of the template",
                      "type": "string"
                    },
                    "text": {
                      "description": "The template plain_text",
                      "type": "string"
                    },
                    "created": {
                      "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TagUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagEnum"
            },
            "id": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag name",
                  "type": "string",
                  "example": "My Tag"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "TagUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchTagResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "description": "The Tag ID",
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The Tag name",
                      "type": "string",
                      "example": "My Tag"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tag-group": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag-group"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "lists": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "list"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "segments": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "campaigns": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "campaign"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "flows": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "TagGroupUpdateQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TagGroupEnum"
            },
            "id": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Tag Group name",
                  "type": "string",
                  "example": "My Tag Group"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes"
          ]
        },
        "TagGroupUpdateQuery": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagGroupUpdateQueryResourceObject"
            }
          },
          "required": [
            "data"
          ]
        },
        "PatchTagGroupResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagGroupEnum"
                },
                "id": {
                  "description": "The Tag Group ID",
                  "type": "string",
                  "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The Tag Group name",
                      "type": "string",
                      "example": "My Tag Group"
                    },
                    "exclusive": {
                      "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                      "type": "boolean"
                    },
                    "default": {
                      "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "CatalogItemDeleteQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogItemEnum"
            },
            "id": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          "required": [
            "type",
            "id"
          ]
        },
        "CatalogVariantDeleteQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogVariantEnum"
            },
            "id": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            }
          },
          "required": [
            "type",
            "id"
          ]
        },
        "CatalogCategoryDeleteQueryResourceObject": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CatalogCategoryEnum"
            },
            "id": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          "required": [
            "type",
            "id"
          ]
        },
        "ListMembersDeleteQuery": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "profile"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "DeleteTemplateResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TemplateEnum"
                },
                "id": {
                  "description": "The ID of template",
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "description": "The ID of the company the template belongs to",
                      "type": "string",
                      "example": "COMPANY_ID"
                    },
                    "name": {
                      "description": "The name of the template",
                      "type": "string"
                    },
                    "editor_type": {
                      "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n",
                      "type": "string"
                    },
                    "html": {
                      "description": "The rendered HTML of the template",
                      "type": "string"
                    },
                    "text": {
                      "description": "The template plain_text",
                      "type": "string"
                    },
                    "created": {
                      "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "DeleteTagResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "description": "The Tag ID",
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The Tag name",
                      "type": "string",
                      "example": "My Tag"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tag-group": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag-group"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "lists": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "list"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "segments": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "campaigns": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "campaign"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    "flows": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "DeleteTagGroupResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagGroupEnum"
                },
                "id": {
                  "description": "The Tag Group ID",
                  "type": "string",
                  "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The Tag Group name",
                      "type": "string",
                      "example": "My Tag Group"
                    },
                    "exclusive": {
                      "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                      "type": "boolean"
                    },
                    "default": {
                      "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "links": {
                          "$ref": "#/components/schemas/RelationshipLinks"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  }
                },
                "links": {
                  "$ref": "#/components/schemas/ObjectLinks"
                }
              },
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ]
            }
          },
          "required": [
            "data"
          ]
        },
        "RelationshipLinks": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri"
            },
            "related": {
              "type": "string",
              "format": "uri"
            }
          },
          "required": [
            "self",
            "related"
          ]
        },
        "CollectionLinks": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri"
            },
            "first": {
              "type": "string",
              "format": "uri"
            },
            "last": {
              "type": "string",
              "format": "uri"
            },
            "prev": {
              "type": "string",
              "format": "uri"
            },
            "next": {
              "type": "string",
              "format": "uri"
            }
          },
          "required": [
            "self"
          ]
        },
        "ObjectLinks": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "uri"
            }
          },
          "required": [
            "self"
          ]
        },
        "CatalogItemEnum": {
          "type": "string",
          "enum": [
            "catalog-item"
          ]
        },
        "CatalogVariantEnum": {
          "type": "string",
          "enum": [
            "catalog-variant"
          ]
        },
        "CatalogCategoryEnum": {
          "type": "string",
          "enum": [
            "catalog-category"
          ]
        },
        "EventEnum": {
          "type": "string",
          "enum": [
            "event"
          ]
        },
        "MetricEnum": {
          "type": "string",
          "enum": [
            "metric"
          ]
        },
        "ProfileEnum": {
          "type": "string",
          "enum": [
            "profile"
          ]
        },
        "ListEnum": {
          "type": "string",
          "enum": [
            "list"
          ]
        },
        "TagEnum": {
          "type": "string",
          "enum": [
            "tag"
          ]
        },
        "SegmentEnum": {
          "type": "string",
          "enum": [
            "segment"
          ]
        },
        "FlowEnum": {
          "type": "string",
          "enum": [
            "flow"
          ]
        },
        "FlowActionEnum": {
          "type": "string",
          "enum": [
            "flow-action"
          ]
        },
        "FlowMessageEnum": {
          "type": "string",
          "enum": [
            "flow-message"
          ]
        },
        "CampaignEnum": {
          "type": "string",
          "enum": [
            "campaign"
          ]
        },
        "CampaignMessageEnum": {
          "type": "string",
          "enum": [
            "campaign-message"
          ]
        },
        "CampaignSendJobEnum": {
          "type": "string",
          "enum": [
            "campaign-send-job"
          ]
        },
        "CampaignRecipientEstimationJobEnum": {
          "type": "string",
          "enum": [
            "campaign-recipient-estimation-job"
          ]
        },
        "CampaignRecipientEstimationEnum": {
          "type": "string",
          "enum": [
            "campaign-recipient-estimation"
          ]
        },
        "TemplateEnum": {
          "type": "string",
          "enum": [
            "template"
          ]
        },
        "CatalogItemBulkCreateJobEnum": {
          "type": "string",
          "enum": [
            "catalog-item-bulk-create-job"
          ]
        },
        "CatalogItemBulkUpdateJobEnum": {
          "type": "string",
          "enum": [
            "catalog-item-bulk-update-job"
          ]
        },
        "CatalogItemBulkDeleteJobEnum": {
          "type": "string",
          "enum": [
            "catalog-item-bulk-delete-job"
          ]
        },
        "CatalogVariantBulkCreateJobEnum": {
          "type": "string",
          "enum": [
            "catalog-variant-bulk-create-job"
          ]
        },
        "CatalogVariantBulkUpdateJobEnum": {
          "type": "string",
          "enum": [
            "catalog-variant-bulk-update-job"
          ]
        },
        "CatalogVariantBulkDeleteJobEnum": {
          "type": "string",
          "enum": [
            "catalog-variant-bulk-delete-job"
          ]
        },
        "CatalogCategoryBulkCreateJobEnum": {
          "type": "string",
          "enum": [
            "catalog-category-bulk-create-job"
          ]
        },
        "CatalogCategoryBulkUpdateJobEnum": {
          "type": "string",
          "enum": [
            "catalog-category-bulk-update-job"
          ]
        },
        "CatalogCategoryBulkDeleteJobEnum": {
          "type": "string",
          "enum": [
            "catalog-category-bulk-delete-job"
          ]
        },
        "TagGroupEnum": {
          "type": "string",
          "enum": [
            "tag-group"
          ]
        },
        "MetricAggregateEnum": {
          "type": "string",
          "enum": [
            "metric-aggregate"
          ]
        },
        "ProfileSuppressionBulkCreateJobEnum": {
          "type": "string",
          "enum": [
            "profile-suppression-bulk-create-job"
          ]
        },
        "ProfileUnsuppressionBulkCreateJobEnum": {
          "type": "string",
          "enum": [
            "profile-unsuppression-bulk-create-job"
          ]
        },
        "ProfileSubscriptionBulkCreateJobEnum": {
          "type": "string",
          "enum": [
            "profile-subscription-bulk-create-job"
          ]
        },
        "ProfileUnsubscriptionBulkCreateJobEnum": {
          "type": "string",
          "enum": [
            "profile-unsubscription-bulk-create-job"
          ]
        },
        "DataPrivacyDeletionJobEnum": {
          "type": "string",
          "enum": [
            "data-privacy-deletion-job"
          ]
        },
        "SubscriptionEnum": {
          "type": "string",
          "enum": [
            "subscription"
          ]
        }
      },
      "responses": {
        "ClientError": {
          "description": "Client Error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "code",
                        "title",
                        "detail"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "detail": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "pointer": {
                              "type": "string"
                            },
                            "parameter": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "errors"
                ]
              }
            }
          }
        },
        "ServerError": {
          "description": "Server Error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "code",
                        "title",
                        "detail"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "detail": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "pointer": {
                              "type": "string"
                            },
                            "parameter": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "errors"
                ]
              }
            }
          }
        }
      },
      "securitySchemes": {
        "Klaviyo-API-Key": {
          "type": "apiKey",
          "in": "header",
          "name": "Authorization",
          "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2023-02-22/reference/api-overview#authentication",
          "x-default": "Klaviyo-API-Key your-private-api-key"

        }
      }
    },
    "tags": [
      {
        "name": "Campaigns",
        "description": "campaigns"
      },
      {
        "name": "Catalogs",
        "description": "catalogs"
      },
      {
        "name": "Data Privacy",
        "description": "data privacy"
      },
      {
        "name": "Events",
        "description": "events"
      },
      {
        "name": "Flows",
        "description": "flows"
      },
      {
        "name": "Lists",
        "description": "lists"
      },
      {
        "name": "Metrics",
        "description": "metrics"
      },
      {
        "name": "Profiles",
        "description": "profiles"
      },
      {
        "name": "Segments",
        "description": "segments"
      },
      {
        "name": "Tags",
        "description": "tags"
      },
      {
        "name": "Templates",
        "description": "templates"
      },
      {
        "name": "Tests",
        "description": "tests"
      },
      {
        "name": "Client",
        "description": "client"
      }
    ],
    "security": [
      {
        "Klaviyo-API-Key": []
      }
    ],
    "x-readme": {
      "explorer-enabled": false,
      "proxy-enabled": true,
      "samples-enabled": true
    }
  }