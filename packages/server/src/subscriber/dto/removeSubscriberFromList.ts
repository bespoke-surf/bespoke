import { ApiProperty } from '@nestjs/swagger';
import { Type } from 'class-transformer';
import {
  IsDefined,
  IsEnum,
  IsNotEmpty,
  IsNotEmptyObject,
  IsObject,
  IsUUID,
  ValidateNested,
} from 'class-validator';
import { ApiBodyTypeEnum } from '../../apiKey/enum/apiBodyTypeEnum';

class RemoveSubscriberFromListDataObject {
  @IsEnum(ApiBodyTypeEnum, { always: true })
  @IsNotEmpty()
  @ApiProperty({
    enum: ApiBodyTypeEnum,
    default: ApiBodyTypeEnum.Subscriber,
  })
  type: ApiBodyTypeEnum;

  @IsNotEmpty()
  @IsUUID()
  @ApiProperty({
    description:
      'Primary key that uniquely identifies the list. Generated by Bespoke.',
    default: 'UUID',
    example: 'UUID',
  })
  listId: string;
}

export class RemoveSubscriberFromListDto {
  @IsObject()
  @IsNotEmptyObject()
  @IsDefined()
  @ValidateNested()
  @Type(() => RemoveSubscriberFromListDataObject)
  @ApiProperty()
  data: RemoveSubscriberFromListDataObject;
}
